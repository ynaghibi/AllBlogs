<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta name="generator" content="LyX 2.4.2.1" />
<title>LyX Document</title>
<style>
/* Layout-provided Styles */
div.standard {
	margin-bottom: 2ex;
}
h2.section {
font-weight: bold;
font-size: x-large;
margin-top: 1.3ex;
margin-bottom: 0.7ex;
text-align: left;

}
dl.description dt { font-weight: bold; }
h3.subsection {
font-weight: bold;
font-size: large;
margin-top: 0.9ex;
margin-bottom: 0.5ex;
text-align: left;

}
div.plain_layout {
text-align: left;

}
div.lyx_code {
font-family: monospace;
margin-top: 0.5ex;
margin-bottom: 0.5ex;
margin-left: 3ex;
margin-right: 3ex;
text-align: left;

}
h4.subsubsection {
font-weight: bold;
font-size: medium;
margin-top: 0.7ex;
margin-bottom: 0.4ex;
text-align: left;

}
ul.itemize {
margin-top: 0.7ex;
margin-bottom: 0.7ex;
margin-left: 3ex;
text-align: left;

}
div.bibliography {
	margin-left: 2em;
	text-indent: -2em;
}
span.bibitemlabel:before { content: "["; }
span.bibitemlabel:after { content: "] "; }
div.toc {
  margin: 2em 0em;
  border-style: solid;
  border-width: 2px 0px;
  padding: 1em 0em;
}
h2.tochead { font-size: x-large; font-weight: bold; }
div.lyxtoc-0 {
  margin: 2em 0em 0em 0em;
  font-size: xx-large;
  font-weight: bold;
}
div.lyxtoc-1 {
  margin: 1em 0em 0em 0em;
  font-size: x-large;
  font-weight: bold;
}
div.lyxtoc-2 {
  margin: 0.5em 0.1em 0em 1em;
  font-size: large;
  font-weight: normal;
}
div.lyxtoc-3 { margin: 0.2em 0.1em 0em 0.5em; font-size: medium; }
div.lyxtoc-4 { margin: 0em 0.1em 0em 0.5em; }
div.lyxtoc-5 { margin: 0em 0.1em 0em 0.5em; }
div.lyxtoc-6 { margin: 0em 0.1em 0em 0.5em; }
a.tocentry {
  text-decoration: none;
  color: black;
}
a.tocentry:visited { color: black; }
div.float {
	border: 2px solid black;
	text-align: center;
}
div.float-caption {
	text-align: center;
	border: 2px solid black;
	padding: 1ex;
	margin: 1ex;
}


</style>
</head>
<body dir="auto">
<div class='standard' id='magicparlabel-1'> </div>















<div class='standard' id='magicparlabel-9'> </div>































<div class='standard' id='magicparlabel-25'>&#xA0;&#xA0;</div>

<div class='standard' id='magicparlabel-30'><br /></div>
<div class='toc'><h2 class='tochead section'>Table of Contents</h2>
<div class='lyxtoc-1'>
<div class='lyxtoc-2'>
<a href='#magicparlabel-35' class='tocentry'>1 Quick Info</a>

<div class='lyxtoc-3'>
<a href='#magicparlabel-51' class='tocentry'>1.1 Big project</a>
</div>
</div>
<div class='lyxtoc-2'>
<a href='#magicparlabel-1004' class='tocentry'>References <a href="https://www.kaggle.com/competitions/house-prices-advanced-regression-techniques/submissions">House Prices - Advanced Regression Techniques</a></a>
</div>
</div>
</div>

<section>
<h2 class='section' id='magicparlabel-35'><span class="section_label">1</span> Quick Info</h2>
<dl class='description'>
<dt class="description_label">Audience:</dt>
<dd class="description_item" id='magicparlabel-36'> This part of the series is made for people who are already familiar with basic concepts in machine learning (see previous part). </dd>
<dt class="description_label">Goal:</dt>
<dd class="description_item" id='magicparlabel-37'> Predict house sale prices in a Kaggle beginner competition using machine learning in Python. </dd>
<dt class="description_label">Resources:</dt>
<dd class="description_item" id='magicparlabel-38'> On my GitHub page you can download the whole guide as a PDF or find the links to all parts of this series.
<dl class='description'>
<dt class="description_label">PDF:</dt>
<dd class="description_item" id='magicparlabel-39'> <a href="https://github.com/ynaghibi/BlogsResources/blob/main/Machine_Learning_Blog.pdf">https://github.com/ynaghibi/BlogsResources/blob/main/Machine_Learning_Blog.pdf</a></dd>
<dt class="description_label">All&#xA0;Parts:</dt>
<dd class="description_item" id='magicparlabel-40'> <a href="https://github.com/ynaghibi/BlogsResources/blob/main/ML%20Guide%20Links">https://github.com/ynaghibi/BlogsResources/blob/main/ML%20Guide%20Links</a></dd>
<dt class="description_label">Python&#xA0;Script&#xA0;(Main):</dt>
<dd class="description_item" id='magicparlabel-41'> <a href="https://github.com/ynaghibi/BlogsResources/blob/main/KagglC1.py">KagglC1.py</a> (save this in the same folder as the supplement script and the csv files from Kaggle before you run it)</dd>
<dt class="description_label">Python&#xA0;Script&#xA0;(Supplement)</dt>
<dd class="description_item" id='magicparlabel-42'> <a href="https://github.com/ynaghibi/BlogsResources/blob/main/KagglDataC1.py">KagglDataC1.py</a></dd>
<dt class="description_label">Kaggle:</dt>
<dd class="description_item" id='magicparlabel-43'> <a href="https://www.kaggle.com/competitions/house-prices-advanced-regression-techniques/submissions">House Prices - Advanced Regression Techniques</a></dd>
</dl>
</dd><dt class="description_label">Last&#xA0;Edit:</dt>
<dd class="description_item" id='magicparlabel-44'> 2025 April 03</dd>
<dt class="description_label">Credits:</dt>
<dd class="description_item" id='magicparlabel-45'> This guide is inspired by chapter 2 in "<i>Hands on Machine Learning</i>" by Aur√©lien Geron [<a href='#LyXCite-HoML'><span class="bib-label">HoML</span></a>]. I am in no way associated with the author himself. This guide does not replicate any parts of the book, and the code presented here is based on publicly available source codes (see Colab). </dd>

<dd class="description_item" id='magicparlabel-46'></dd>
</dl>
<section>
<h3 class='subsection' id='magicparlabel-51'><span class="subsection_label">1.1</span> Big project</h3>
<div class='standard' id='magicparlabel-52'>Compared to the previous small project the learning curve will be steeper here, but you will also learn a lot more.</div>

<div class='standard' id='magicparlabel-53'>Just like we did in the <b>First Steps</b> section, we need to import the basic modules and load the data. One way to get a grasp on large datasets is to plot the <b>histogram</b> of all numerical features. The numerical values are grouped together in <b>bins</b> that are arranged along the x-axis. The bar length along the y-axis shows how many samples occured in each bin. The following code plots the histograms of each feature next to each other. When looking at histograms, it is often important to find heavy-tailed distributions (e.g., the left plot below). These distributions are asymmetrical in the sense that most of the values are amassed on one side of the x-axis, while the other side is "stretched thin" on the other side. Heavy-tailed distributions can be usually converted to bell-shaped normal distribution by calculating the logarithm of the numerical values (on the x-axis). Many regressors can handle normal distributions much better. </div>
<div class='float-algorithm'><div class='plain_layout' id='magicparlabel-57'><math xmlns='http://www.w3.org/1998/Math/MathML'>
</math>
</div>
<div class='lyx_code'>
<div class="lyx_code_item" id='magicparlabel-62'><span style='font-size:x-small;'>#&#160;%%</span></div>
<div class="lyx_code_item" id='magicparlabel-63'><span style='font-size:x-small;'>import&#160;numpy&#160;as&#160;np</span></div>
<div class="lyx_code_item" id='magicparlabel-64'><span style='font-size:x-small;'>import&#160;pandas&#160;as&#160;pd</span></div>
<div class="lyx_code_item" id='magicparlabel-65'><span style='font-size:x-small;'>import&#160;matplotlib.pyplot&#160;as&#160;plt</span></div>
<div class="lyx_code_item" id='magicparlabel-66'>&#160;</div>
<div class="lyx_code_item" id='magicparlabel-67'><span style='font-size:x-small;'>#&#160;%%</span></div>
<div class="lyx_code_item" id='magicparlabel-68'><span style='font-size:x-small;'>from&#160;IPython.display&#160;import&#160;display</span></div>
<div class="lyx_code_item" id='magicparlabel-69'><span style='font-size:x-small;'>from&#160;pathlib&#160;import&#160;Path</span></div>
<div class="lyx_code_item" id='magicparlabel-70'><span style='font-size:x-small;'>sLocal_Folder_Path&#160;=&#160;Path(__file__).parent.resolve()</span></div>
<div class="lyx_code_item" id='magicparlabel-71'><span style='font-size:x-small;'>train_file_path&#160;=&#160;sLocal_Folder_Path&#160;/&#160;"train.csv"&#160;#&#160;Uses&#160;OS-appropriate&#160;separator</span></div>
<div class="lyx_code_item" id='magicparlabel-72'><span style='font-size:x-small;'>predict_file_path&#160;=&#160;sLocal_Folder_Path&#160;/&#160;"test.csv"</span></div>
<div class="lyx_code_item" id='magicparlabel-73'><span style='font-size:x-small;'>housing&#160;=&#160;pd.read_csv(train_file_path)</span></div>
<div class="lyx_code_item" id='magicparlabel-74'><span style='font-size:x-small;'>housing_unknown&#160;=&#160;pd.read_csv(predict_file_path)</span></div>
</div>
<div class='plain_layout' id='magicparlabel-75'><span class='float-caption-Standard float-caption float-caption-standard'>Algorithm 1:  Jupyter Cell (repetition)</span></div>
</div>
<div class='float-algorithm'><div class='plain_layout' id='magicparlabel-83'><math xmlns='http://www.w3.org/1998/Math/MathML'>
</math>
</div>
<div class='lyx_code'>
<div class="lyx_code_item" id='magicparlabel-88'><span style='font-size:x-small;'>#&#160;%%</span></div>
<div class="lyx_code_item" id='magicparlabel-89'><span style='font-size:x-small;'>housing.hist(bins=50,&#160;figsize=(30,25))</span></div>
<div class="lyx_code_item" id='magicparlabel-90'><span style='font-size:x-small;'>plt.show()</span></div>
</div>
<div class='plain_layout' id='magicparlabel-91'><span class='float-caption-Standard float-caption float-caption-standard'>Algorithm 2:  Jupyter Cell</span></div>
</div>
<div class='float-figure'><div class='plain_layout' id='magicparlabel-99'><img style='width:30%;' src='e_ef5a29fb9141_heavytail_example.png' alt='image: e_ef5a29fb9141_heavytail_example.png' /></div>

<div class='plain_layout' id='magicparlabel-104'><span class='float-caption-Standard float-caption float-caption-standard'>Figure 1.1:  Heavy-tailed vs. normal distribution (generated with deepseek)</span></div>
</div>


<div class='standard' id='magicparlabel-109'>For now we will not worry about transforming the dataset. Instead, we collect all heavy-tailed feature labels in the <b><span style='font-size:x-small;'>housing</span></b> dataset, and list them in <b><span style='font-size:x-small;'>heavy_tailed_features</span></b> for later use. The output of this cell shows us the heavy-tailed features only.Besides the numerical features we have to deal with categorical ones as well. Fortunately, there is a file <b>data_description.txt</b> from the zip-file we downloaded from Kaggle. If you open it in a text-editor, you can see a description of all features like e.g. Thanks to this description we can try to convert the feature labeled as <b><span style='font-size:x-small;'>ExterQual</span></b> into a numerical one. It may seem curious at first, but since evaluations like <b><span style='font-size:x-small;'>Excellent</span></b> or <b><span style='font-size:x-small;'>Poor</span></b> are based on human estimations, it makes sense to transform them into fibonnaci-numbers rather than linearly increasing ones.</div>
<div class='float-algorithm'><div class='plain_layout' id='magicparlabel-113'><math xmlns='http://www.w3.org/1998/Math/MathML'>
</math>
</div>
<div class='lyx_code'>
<div class="lyx_code_item" id='magicparlabel-118'><span style='font-size:x-small;'>#&#160;%%</span></div>
<div class="lyx_code_item" id='magicparlabel-119'><span style='font-size:x-small;'>heavy_tailed_features&#160;=&#160;["LotFrontage",&#160;"LotArea",&#160;"1stFlrSF",&#160;"TotalBsmtSF",&#160;"GrLivArea"]</span></div>
<div class="lyx_code_item" id='magicparlabel-120'><span style='font-size:x-small;'>housing[heavy_tailed_features].hist(bins=50,&#160;figsize=(12,8))</span></div>
<div class="lyx_code_item" id='magicparlabel-121'><span style='font-size:x-small;'>plt.show()</span></div>
</div>
<div class='plain_layout' id='magicparlabel-122'><span class='float-caption-Standard float-caption float-caption-standard'>Algorithm 3:  Jupyter Cell</span></div>
</div>
<div class='float-figure'><div class='plain_layout' id='magicparlabel-130'><img style='width:30%;' src='e_39e7dacca8db_Housing_heavy_tailed.png' alt='image: e_39e7dacca8db_Housing_heavy_tailed.png' /></div>

<div class='plain_layout' id='magicparlabel-135'><span class='float-caption-Standard float-caption float-caption-standard'>Figure 1.2:  Heavy-tailed vs. normal distribution</span></div>
</div>
<div class='float-algorithm'><div class='plain_layout' id='magicparlabel-143'><math xmlns='http://www.w3.org/1998/Math/MathML'>
</math>
</div>
<div class='lyx_code'>
<div class="lyx_code_item" id='magicparlabel-148'><span style='font-size:x-small;'>#&#160;%%</span></div>
<div class="lyx_code_item" id='magicparlabel-149'><span style='font-size:x-small;'>ExterQual:&#160;Evaluates&#160;the&#160;quality&#160;of&#160;the&#160;material&#160;on&#160;the&#160;exterior&#160;</span></div>
<div class="lyx_code_item" id='magicparlabel-150'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;&#160;&#160;&#160;Ex	Excellent</span></div>
<div class="lyx_code_item" id='magicparlabel-151'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;&#160;&#160;&#160;Gd	Good</span></div>
<div class="lyx_code_item" id='magicparlabel-152'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;&#160;&#160;&#160;TA	Average/Typical</span></div>
<div class="lyx_code_item" id='magicparlabel-153'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;&#160;&#160;&#160;Fa	Fair</span></div>
<div class="lyx_code_item" id='magicparlabel-154'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;&#160;&#160;&#160;Po	Poor</span></div>
</div>
<div class='plain_layout' id='magicparlabel-155'><span class='float-caption-Standard float-caption float-caption-standard'>Algorithm 4:  Snippet from data_description.txt</span></div>
</div>


<div class='standard' id='magicparlabel-160'>The reason behind this is that the difference between two adjacent numbers in a fibonnaci sequence is increasing based on the previous number in the sequence. Otherwise humans would have a harder time to distinguish between them (for more details see e.g. [<a href='#LyXCite-Scrum'><span class="bib-label">ScrumRef</span></a>]). </div>

<div class='standard' id='magicparlabel-161'>As a further justification for this approach, we will see that the numerical value of <b><span style='font-size:x-small;'>ExterQual</span></b> is quite important for predicting the sales price targets. </div>

<div class='standard' id='magicparlabel-162'>Of course there are also features, where it does not make much sense converting them to any number like e.g. the type of the roof material. For now we will keep them as categorical values (i.e. strings). </div>

<div class='standard' id='magicparlabel-163'>For our feature-to-number-mapping we can use dictionaries in Python. Since putting all feature-mapping dictionaries in one .py file would clutter the code, we store them in a file <b>KagglDataC1.py</b> instead, and put this file in the same folder as our main Python script. The complete file can be found on my Github page (see [<a href='#LyXCite-KagglData_py'><span class="bib-numericallabel">1</span></a>]), but you can also create it yourself. Now we can go back to our main Python file, and add the following cell. This imports the contents of our KagglDataC1.py file, automatically converts features like <b><span style='font-size:x-small;'>ExterQual</span></b> to a numerical value, adds them as new features in the dataframes <b><span style='font-size:x-small;'>housing</span></b> and <b><span style='font-size:x-small;'>housing_unknown</span></b>, and deletes the columns of the original non-numerical features. In addition, we added the prefix "<b><span style='font-size:x-small;'>Ranked_</span></b>" to the new features in order to distinguish them from other features. </div>
<div class='float-algorithm'><div class='plain_layout' id='magicparlabel-167'><math xmlns='http://www.w3.org/1998/Math/MathML'>
</math>
</div>
<div class='lyx_code'>
<div class="lyx_code_item" id='magicparlabel-172'><span style='font-size:x-small;'>#&#160;%%</span></div>
<div class="lyx_code_item" id='magicparlabel-173'><span style='font-size:x-small;'>#&#160;ExterQual:&#160;Evaluates&#160;the&#160;quality&#160;of&#160;the&#160;material&#160;on&#160;the&#160;exterior&#160;</span></div>
<div class="lyx_code_item" id='magicparlabel-174'><span style='font-size:x-small;'>fibonacci_mapping_ExterQual&#160;=&#160;{</span></div>
<div class="lyx_code_item" id='magicparlabel-175'><span style='font-size:x-small;'>	"Po":&#160;1,&#160;&#160;&#160;&#160;#&#160;Poor</span></div>
<div class="lyx_code_item" id='magicparlabel-176'><span style='font-size:x-small;'>&#160;&#160;&#160;"Fa":&#160;2,&#160;&#160;#&#160;Fair</span></div>
<div class="lyx_code_item" id='magicparlabel-177'><span style='font-size:x-small;'>&#160;&#160;&#160;"TA":&#160;3,&#160;&#160;#&#160;Average/Typical</span></div>
<div class="lyx_code_item" id='magicparlabel-178'><span style='font-size:x-small;'>&#160;&#160;&#160;"Gd":&#160;5,&#160;#&#160;Good</span></div>
<div class="lyx_code_item" id='magicparlabel-179'><span style='font-size:x-small;'>&#160;&#160;&#160;"Ex":&#160;8,&#160;#&#160;Excellent</span></div>
<div class="lyx_code_item" id='magicparlabel-180'><span style='font-size:x-small;'>}</span></div>
</div>
<div class='plain_layout' id='magicparlabel-181'><span class='float-caption-Standard float-caption float-caption-standard'>Algorithm 5:  Snippet from KagglDataC1.py</span></div>
</div>
<div class='float-algorithm'><div class='plain_layout' id='magicparlabel-189'><math xmlns='http://www.w3.org/1998/Math/MathML'>
</math>
</div>
<div class='lyx_code'>
<div class="lyx_code_item" id='magicparlabel-194'><span style='font-size:x-small;'>#&#160;%%</span></div>
<div class="lyx_code_item" id='magicparlabel-195'><span style='font-size:x-small;'>from&#160;KagglDataC1&#160;import&#160;*</span></div>
<div class="lyx_code_item" id='magicparlabel-196'><b><span style='font-family:sans-serif;'><span style='font-size:x-small;'>ranked_category_columns</span></span></b><span style='font-family:sans-serif;'><span style='font-size:x-small;'><!-- Output Error: Tried to close pending tag `span' when other tags were pending. Last pending tag is `<span style='font-size:x-small;'>'. Tag discarded. -->
<span style='font-family:monospace;'>&#160;=&#160;["BsmtQual",&#160;"BsmtCond",&#160;"BsmtExposure",&#160;</span></span></span></div>
<div class="lyx_code_item" id='magicparlabel-197'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;"BsmtFinType1",&#160;"BsmtFinType2",&#160;"HeatingQC",&#160;"KitchenQual",&#160;</span></div>
<div class="lyx_code_item" id='magicparlabel-198'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;"Functional",&#160;"FireplaceQu",&#160;"GarageFinish",&#160;"GarageQual",</span></div>
<div class="lyx_code_item" id='magicparlabel-199'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;"GarageCond",&#160;"PavedDrive",&#160;"PoolQC",&#160;"Fence",&#160;"ExterCond",&#160;"ExterQual"</span></div>
<div class="lyx_code_item" id='magicparlabel-200'><span style='font-size:x-small;'>]</span></div>
<div class="lyx_code_item" id='magicparlabel-201'>&#160;</div>
<div class="lyx_code_item" id='magicparlabel-202'><span style='font-size:x-small;'>def&#160;transform_categories_to_ranked(data):</span></div>
<div class="lyx_code_item" id='magicparlabel-203'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;for&#160;col&#160;in&#160;<b><span style='font-family:sans-serif;'>ranked_category_columns</span></b><span style='font-family:monospace;'>:</span></span></div>
<div class="lyx_code_item" id='magicparlabel-204'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;data[f"Ranked_{col}"]&#160;=&#160;data[col].map(globals()[f"fibonacci_mapping_{col}"])</span></div>
<div class="lyx_code_item" id='magicparlabel-205'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;data&#160;=&#160;data.drop(columns=<b><span style='font-family:sans-serif;'>ranked_category_columns</span></b><span style='font-family:monospace;'>)</span></span></div>
<div class="lyx_code_item" id='magicparlabel-206'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;return&#160;data</span></div>
<div class="lyx_code_item" id='magicparlabel-207'><span style='font-size:x-small;'>housing&#160;=&#160;transform_categories_to_ranked(housing)</span></div>
<div class="lyx_code_item" id='magicparlabel-208'><span style='font-size:x-small;'>housing_unknown&#160;=&#160;transform_categories_to_ranked(housing_unknown)</span></div>
</div>
<div class='plain_layout' id='magicparlabel-209'><span class='float-caption-Standard float-caption float-caption-standard'>Algorithm 6:  Jupyter Cell</span></div>
</div>


<div class='standard' id='magicparlabel-214'>Of course we should check, whether the modified housing dataframes are correct. One way to do that is to run with the <b><span style='font-size:x-small;'>.info()</span></b> method. It shows a list of all features labels from each column together with their data type and the amount of samples that have this feature. E.g. <b><span style='font-size:x-small;'>int64</span></b><span style='font-size:x-small;'> </span>stands for integers, <b><span style='font-size:x-small;'>float64</span></b><span style='font-size:x-small;'> </span>for float values, whereas <b><span style='font-size:x-small;'>object</span></b> indicates a non-numerical or mixed feature type.</div>
<div class='float-algorithm'><div class='plain_layout' id='magicparlabel-218'><math xmlns='http://www.w3.org/1998/Math/MathML'>
</math>
</div>
<div class='lyx_code'>
<div class="lyx_code_item" id='magicparlabel-223'><span style='font-size:x-small;'>#&#160;%%</span></div>
<div class="lyx_code_item" id='magicparlabel-224'><span style='font-size:x-small;'>display(housing_unknown.info())</span></div>
<div class="lyx_code_item" id='magicparlabel-225'><span style='font-size:x-small;'>display(housing.info())</span></div>
</div>
<div class='plain_layout' id='magicparlabel-226'><span class='float-caption-Standard float-caption float-caption-standard'>Algorithm 7:  Jupyter Cell</span></div>
</div>


<div class='standard' id='magicparlabel-231'>If the output of <b><span style='font-size:x-small;'>.info()</span></b> is too large, you can maximize the whole list by clicking on "<b>scrollable element</b>" in Visual Code. If everything went fine, then it should look like this.If there is no option to show the complete output, then it is probably because there are too many columns/features in your dataset. Fortunately you can fix this by changing the settings with a code like For the output of <b><span style='font-size:x-small;'>.info()</span></b> the setting <b><span style='font-size:x-small;'>max_info_columns</span></b> is enough, but we also want to set <b><span style='font-size:x-small;'>max_rows</span></b> for other outputs as well (e.g. when we display the correlation matrix later on).</div>
<div class='float-figure'><div class='plain_layout' id='magicparlabel-235'><img style='width:30%;' src='e_d47012281b25_visual_code_screen_housing_info.jpg' alt='image: e_d47012281b25_visual_code_screen_housing_info.jpg' /></div>

<div class='plain_layout' id='magicparlabel-240'><span class='float-caption-Standard float-caption float-caption-standard'>Figure 1.3:  Visual Code showing housing info</span></div>
</div>
<div class='float-algorithm'><div class='plain_layout' id='magicparlabel-248'><math xmlns='http://www.w3.org/1998/Math/MathML'>
</math>
</div>
<div class='lyx_code'>
<div class="lyx_code_item" id='magicparlabel-253'><span style='font-size:x-small;'>#&#160;%%</span></div>
<div class="lyx_code_item" id='magicparlabel-254'><span style='font-size:x-small;'>pd.set_option(&#8217;display.max_info_columns&#8217;,&#160;250)</span></div>
<div class="lyx_code_item" id='magicparlabel-255'><span style='font-size:x-small;'>pd.set_option(&#8217;display.max_rows&#8217;,&#160;250)</span></div>
</div>
<div class='plain_layout' id='magicparlabel-256'><span class='float-caption-Standard float-caption float-caption-standard'>Algorithm 8:  Jupyter Cell</span></div>
</div>


<div class='standard' id='magicparlabel-261'>Another way of looking at the housing dataset is to run which will show you information like the mean-value or the minimum/maximum values of all numerical features in the <b><span style='font-size:x-small;'>housing</span></b> dataframe. </div>
<div class='float-algorithm'><div class='plain_layout' id='magicparlabel-265'><math xmlns='http://www.w3.org/1998/Math/MathML'>
</math>
</div>
<div class='lyx_code'>
<div class="lyx_code_item" id='magicparlabel-270'><span style='font-size:x-small;'>#&#160;%%</span></div>
<div class="lyx_code_item" id='magicparlabel-271'><span style='font-size:x-small;'>housing.describe()</span></div>
</div>
<div class='plain_layout' id='magicparlabel-272'><span class='float-caption-Standard float-caption float-caption-standard'>Algorithm 9:  Jupyter Cell</span></div>
</div>


<div class='standard' id='magicparlabel-277'>The set of numerical features can be further divided in continuous and discrete ones. The discrete features are the ones, where the set of all possible values small or very limited. E.g. the housing feature <b><span style='font-size:x-small;'>OverallQual</span></b> can have integer values from 1 to 10 only. For discrete features, we can therefore use which results in the outputAs you can see there are only 2 houses with a terrible <b><span style='font-size:x-small;'>OverallQual</span></b> of 1. Now is a good time to use these methods to explore some of the other features on your own before moving on. Maybe you can find some interesting observations. E.g. you may want to look at how many kitchen or other types of rooms the house samples have.</div>
<div class='float-algorithm'><div class='plain_layout' id='magicparlabel-281'><math xmlns='http://www.w3.org/1998/Math/MathML'>
</math>
</div>
<div class='lyx_code'>
<div class="lyx_code_item" id='magicparlabel-286'><span style='font-size:x-small;'>#&#160;%%</span></div>
<div class="lyx_code_item" id='magicparlabel-287'><span style='font-size:x-small;'>(housing["OverallQual"]).value_counts().sort_index()</span></div>
</div>
<div class='plain_layout' id='magicparlabel-288'><span class='float-caption-Standard float-caption float-caption-standard'>Algorithm 10:  Test</span></div>
</div>
<div class='float-algorithm'><div class='plain_layout' id='magicparlabel-296'><math xmlns='http://www.w3.org/1998/Math/MathML'>
</math>
</div>
<div class='lyx_code'>
<div class="lyx_code_item" id='magicparlabel-301'><span style='font-size:x-small;'>OverallQual</span></div>
<div class="lyx_code_item" id='magicparlabel-302'><span style='font-size:x-small;'>1&#160;&#160;&#160;&#160;&#160;&#160;&#160;2</span></div>
<div class="lyx_code_item" id='magicparlabel-303'><span style='font-size:x-small;'>2&#160;&#160;&#160;&#160;&#160;&#160;&#160;3</span></div>
<div class="lyx_code_item" id='magicparlabel-304'><span style='font-size:x-small;'>3&#160;&#160;&#160;&#160;&#160;&#160;20</span></div>
<div class="lyx_code_item" id='magicparlabel-305'><span style='font-size:x-small;'>4&#160;&#160;&#160;&#160;&#160;116</span></div>
<div class="lyx_code_item" id='magicparlabel-306'><span style='font-size:x-small;'>5&#160;&#160;&#160;&#160;&#160;397</span></div>
<div class="lyx_code_item" id='magicparlabel-307'><span style='font-size:x-small;'>6&#160;&#160;&#160;&#160;&#160;374</span></div>
<div class="lyx_code_item" id='magicparlabel-308'><span style='font-size:x-small;'>7&#160;&#160;&#160;&#160;&#160;319</span></div>
<div class="lyx_code_item" id='magicparlabel-309'><span style='font-size:x-small;'>8&#160;&#160;&#160;&#160;&#160;168</span></div>
<div class="lyx_code_item" id='magicparlabel-310'><span style='font-size:x-small;'>9&#160;&#160;&#160;&#160;&#160;&#160;43</span></div>
<div class="lyx_code_item" id='magicparlabel-311'><span style='font-size:x-small;'>10&#160;&#160;&#160;&#160;&#160;18</span></div>
<div class="lyx_code_item" id='magicparlabel-312'><span style='font-size:x-small;'>Name:&#160;count,&#160;dtype:&#160;int64</span></div>
</div>
<div class='plain_layout' id='magicparlabel-313'><span class='float-caption-Standard float-caption float-caption-standard'>Algorithm 11:  Output</span></div>
</div>


<div class='standard' id='magicparlabel-318'>Later on we will modify the housing dataset for temporary purposes (e.g. stratified samples), which is why we should keep a copy of the current housing dataset. Now we should look at the so called <b>standard correlation coefficients</b> between each feature. In short, the correlation measures the linear dependency between two features. The correlation is close to +1 or -1, if there is a strong positive or negative linear relationship between two features. </div>
<div class='float-algorithm'><div class='plain_layout' id='magicparlabel-322'><math xmlns='http://www.w3.org/1998/Math/MathML'>
</math>
</div>
<div class='lyx_code'>
<div class="lyx_code_item" id='magicparlabel-327'><span style='font-size:x-small;'>#&#160;%%</span></div>
<div class="lyx_code_item" id='magicparlabel-328'><span style='font-size:x-small;'>housing_original&#160;=&#160;housing.copy()</span></div>
</div>
<div class='plain_layout' id='magicparlabel-329'><span class='float-caption-Standard float-caption float-caption-standard'>Algorithm 12:  Jupyter Cell</span></div>
</div>


<div class='standard' id='magicparlabel-334'>If a more complex dependency exists, or if there is no dependency at all, then the correlation should be close to 0. Of course it can be possbile to transform non-linear dependencies into linear ones before measuring the correlations, but this topic is not part of our current project.</div>

<div class='standard' id='magicparlabel-335'>These correlation coefficients are conveniently stored in a so called <b>correlation matrix</b>. Since we are very much interested in the correlation of the target sale price and every other feature, we only have to look up the <b><span style='font-size:x-small;'>SalePrice</span></b> column of the correlation matrix.If you run this cell, you should get a list of the correlations of each feature with respect to the targets. It should not surprise you that <b><span style='font-size:x-small;'>SalePrice</span></b> has a correlation of 1.0 with itself. </div>
<div class='float-algorithm'><div class='plain_layout' id='magicparlabel-339'><math xmlns='http://www.w3.org/1998/Math/MathML'>
</math>
</div>
<div class='lyx_code'>
<div class="lyx_code_item" id='magicparlabel-344'><span style='font-size:x-small;'>#&#160;%%</span></div>
<div class="lyx_code_item" id='magicparlabel-345'><span style='font-size:x-small;'>corr_matrix&#160;=&#160;housing.<b><span style='font-family:sans-serif;'>corr</span></b><span style='font-family:monospace;'>(numeric_only&#160;=&#160;True)</span></span></div>
<div class="lyx_code_item" id='magicparlabel-346'><span style='font-size:x-small;'>corr_matrix["SalePrice"].sort_values(ascending&#160;=&#160;False)</span></div>
</div>
<div class='plain_layout' id='magicparlabel-347'><span class='float-caption-Standard float-caption float-caption-standard'>Algorithm 13:  Jupyter Cell</span></div>
</div>


<div class='standard' id='magicparlabel-352'>More interesting examples are <b><span style='font-size:x-small;'>OverallQual</span></b>, which has a high correlation of 0.79. There are also features we derived from the fibonnaci-numbers with a relatively high correlation (e.g. <b><span style='font-size:x-small;'>Ranked_ExterQual</span></b> has 0.69 and <b><span style='font-size:x-small;'>Ranked_KitchenQual</span></b> has 0.68). </div>

<div class='standard' id='magicparlabel-353'>If the absolute value of the correlation between a feature and the target is high, then it is a good indicator that it may be important for prediction models. The advantage of this method is that is quite easy to find those features. </div>

<div class='standard' id='magicparlabel-354'>Of course it may be also possible that we miss some of the other important features, if their correlation is close to 0. In those cases we would need a more sophisticated analysis.</div>
<section>
<h4 class='subsubsection' id='magicparlabel-355'><span class="subsubsection_label">1.1.1</span> Creating new features</h4>
<div class='standard' id='magicparlabel-356'>Based on the old features, we want to create new features that are more meaningful for predict the targets. This requires educated guesses that are tailored to the concrete problem (in this case the house dataset). Here are some thoughts: </div>
<ul class='lyxitem lyxitemi'>
<li class="itemize_item" id='magicparlabel-357'>There are features in the housing dataset, which count the amount of full bathrooms <b><span style='font-size:x-small;'>FullBath</span></b> (including a shower) and <b><span style='font-size:x-small;'>HalfBath</span></b> (i.e. toilets only) separately. Furthermore, these numbers do not take into account the baths in the basement (<b><span style='font-size:x-small;'>BsmtFullBath</span></b> and <b><span style='font-size:x-small;'>BsmtHalfBath</span></b>). By computing the sum of these four features, we get a more meaningful number of the total amount of bathrooms.</li>
<li class="itemize_item" id='magicparlabel-358'>The total area <b><span style='font-size:x-small;'>GrLivArea</span></b> of living space (basement not included) is already an important feature, but if we multiply it with <b><span style='font-size:x-small;'>OverallQual</span></b> we may get an even more meaningful one.</li>
<li class="itemize_item" id='magicparlabel-359'>The fibonnaci-ranked features <b><span style='font-size:x-small;'>Ranked_PavedDrive</span></b>, <b><span style='font-size:x-small;'>GarageFinish</span></b>, <b><span style='font-size:x-small;'>Ranked_GarageQual</span></b>, <b><span style='font-size:x-small;'>GarageCars</span></b> and <b><span style='font-size:x-small;'>GarageArea</span></b> are probably related to each other such that it can make sense to calculate their product. </li>
<li class="itemize_item" id='magicparlabel-360'>The same is probably true for the quality of the heating <b><span style='font-size:x-small;'>Ranked_HeatingQC</span></b> and the total amount of rooms <b><span style='font-size:x-small;'>TotRmsAbvGrd</span></b> (basement not included).</li>
<li class="itemize_item" id='magicparlabel-361'>Ratios like the amount of bedrooms per living area, or the amount of bathrooms per bedrooms can also lead to important new features.</li>
</ul>
<div class='standard' id='magicparlabel-362'>We can translate these ideas to the code below. Note that when we compute the ratios, we have to be careful not to divide by 0. In our example we solve this problem by checking whether the feature of a given sample is 0, and then provide an alternative feature that is guaranteed to have a different value than 0. Afterwards we can quickly check how the correlations of the new features look like compared to the old ones.The new output tells us e.g. that <b><span style='font-size:x-small;'>areaquality_product</span></b> has the highest correlation of any other feature, which is already an improvement. We can also see that <b><span style='font-size:x-small;'>garage_product</span></b> has a significantly higher correlation than any of its factors. </div>
<div class='float-algorithm'><div class='plain_layout' id='magicparlabel-366'><math xmlns='http://www.w3.org/1998/Math/MathML'>
</math>
</div>
<div class='lyx_code'>
<div class="lyx_code_item" id='magicparlabel-371'><span style='font-size:x-small;'>#&#160;%%</span></div>
<div class="lyx_code_item" id='magicparlabel-372'><span style='font-size:x-small;'>housing["bath_sum"]&#160;=&#160;\</span></div>
<div class="lyx_code_item" id='magicparlabel-373'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;housing["FullBath"]&#160;+&#160;housing["HalfBath"]&#160;\</span></div>
<div class="lyx_code_item" id='magicparlabel-374'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;+&#160;housing["BsmtFullBath"]&#160;+&#160;housing["BsmtHalfBath"]</span></div>
<div class="lyx_code_item" id='magicparlabel-375'><span style='font-size:x-small;'>housing["areaquality_product"]&#160;=&#160;housing["GrLivArea"]&#160;*&#160;housing["OverallQual"]</span></div>
<div class="lyx_code_item" id='magicparlabel-376'><span style='font-size:x-small;'>housing["garage_product"]&#160;=&#160;housing["Ranked_PavedDrive"]&#160;\</span></div>
<div class="lyx_code_item" id='magicparlabel-377'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;*&#160;housing["Ranked_GarageFinish"]&#160;*&#160;housing["Ranked_GarageQual"]&#160;\</span></div>
<div class="lyx_code_item" id='magicparlabel-378'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;*&#160;housing["GarageCars"]&#160;*&#160;housing["GarageArea"]</span></div>
<div class="lyx_code_item" id='magicparlabel-379'><span style='font-size:x-small;'>housing["bedrooms_ratio"]&#160;=&#160;housing["BedroomAbvGr"]&#160;/&#160;housing["GrLivArea"]</span></div>
<div class="lyx_code_item" id='magicparlabel-380'><span style='font-size:x-small;'>housing["roomquality_product"]&#160;=&#160;housing["Ranked_HeatingQC"]&#160;\</span></div>
<div class="lyx_code_item" id='magicparlabel-381'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;*&#160;housing["TotRmsAbvGrd"]</span></div>
<div class="lyx_code_item" id='magicparlabel-382'><span style='font-size:x-small;'>housing["bath_kitchen_ratio"]&#160;=&#160;<b><span style='font-family:sans-serif;'>np.where</span></b><span style='font-family:monospace;'>(</span></span></div>
<div class="lyx_code_item" id='magicparlabel-383'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;housing["KitchenAbvGr"]&#160;!=&#160;0,&#160;&#160;#&#160;Condition</span></div>
<div class="lyx_code_item" id='magicparlabel-384'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;(housing["bath_sum"])&#160;/&#160;housing["KitchenAbvGr"],&#160;&#160;#&#160;True:&#160;Perform&#160;division</span></div>
<div class="lyx_code_item" id='magicparlabel-385'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;(housing["bath_sum"])&#160;/&#160;housing["TotRmsAbvGrd"]</span></div>
<div class="lyx_code_item" id='magicparlabel-386'><span style='font-size:x-small;'>)</span></div>
<div class="lyx_code_item" id='magicparlabel-387'><span style='font-size:x-small;'>housing["bath_bedroom_ratio"]&#160;=&#160;np.where(</span></div>
<div class="lyx_code_item" id='magicparlabel-388'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;housing["BedroomAbvGr"]&#160;!=&#160;0,&#160;&#160;#&#160;Condition</span></div>
<div class="lyx_code_item" id='magicparlabel-389'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;(housing["bath_sum"])&#160;/&#160;housing["BedroomAbvGr"],&#160;&#160;#&#160;True:&#160;Perform&#160;division</span></div>
<div class="lyx_code_item" id='magicparlabel-390'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;(housing["bath_sum"])&#160;/&#160;housing["TotRmsAbvGrd"]</span></div>
<div class="lyx_code_item" id='magicparlabel-391'><span style='font-size:x-small;'>)</span></div>
</div>
<div class='plain_layout' id='magicparlabel-392'><span class='float-caption-Standard float-caption float-caption-standard'>Algorithm 14:  Jupyter Cell</span></div>
</div>
<div class='float-algorithm'><div class='plain_layout' id='magicparlabel-400'><math xmlns='http://www.w3.org/1998/Math/MathML'>
</math>
</div>
<div class='lyx_code'>
<div class="lyx_code_item" id='magicparlabel-405'><span style='font-size:x-small;'>#&#160;%%</span></div>
<div class="lyx_code_item" id='magicparlabel-406'><span style='font-size:x-small;'>corr_matrix&#160;=&#160;housing.corr(numeric_only&#160;=&#160;True)</span></div>
<div class="lyx_code_item" id='magicparlabel-407'><span style='font-size:x-small;'>corr_matrix["SalePrice"].sort_values(ascending&#160;=&#160;False)</span></div>
</div>
<div class='plain_layout' id='magicparlabel-408'><span class='float-caption-Standard float-caption float-caption-standard'>Algorithm 15:  Jupyter Cell</span></div>
</div>


<div class='standard' id='magicparlabel-413'>We could go further by dropping the old features after replacing them with better ones, or use advanced techniques like the principal component analysis (PCA), but for the sake of keeping this guide simple we will leave the old and new features as they are right now. </div>

<div class='standard' id='magicparlabel-414'>If we do not want to rely too much on the correlation coefficients, we can also use the so called <b>scatter matrix</b>, where each feature is plotted against each other. This can help to find out non-linear dependencies or clusters. Of course we can also find non-existing dependencies, if the plotted points are mostly aligned around a vertical or horizontal line the plot. </div>

<div class='standard' id='magicparlabel-415'>Note that plotting a feature against itself does not result in any interesting plot, which is why they are replaced by their corresponding histogram. As a result we obtain the following plot. It shows e.g. how our bedrooms ratio has a non-linear dependency with other features like the sale price. </div>
<div class='float-algorithm'><div class='plain_layout' id='magicparlabel-419'><math xmlns='http://www.w3.org/1998/Math/MathML'>
</math>
</div>
<div class='lyx_code'>
<div class="lyx_code_item" id='magicparlabel-424'><span style='font-size:x-small;'>#&#160;%%</span></div>
<div class="lyx_code_item" id='magicparlabel-425'><span style='font-size:x-small;'>from&#160;pandas.plotting&#160;import&#160;scatter_matrix</span></div>
<div class="lyx_code_item" id='magicparlabel-426'><span style='font-size:x-small;'>attributes&#160;=&#160;["SalePrice",&#160;"garage_product",&#160;"areaquality_product",&#160;</span></div>
<div class="lyx_code_item" id='magicparlabel-427'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;"roomquality_product",&#160;"bedrooms_ratio",</span></div>
<div class="lyx_code_item" id='magicparlabel-428'><span style='font-size:x-small;'>]</span></div>
<div class="lyx_code_item" id='magicparlabel-429'><span style='font-size:x-small;'>scatter_matrix(housing[attributes],&#160;figsize=(10,&#160;10))</span></div>
<div class="lyx_code_item" id='magicparlabel-430'><span style='font-size:x-small;'>plt.show()</span></div>
</div>
<div class='plain_layout' id='magicparlabel-431'><span class='float-caption-Standard float-caption float-caption-standard'>Algorithm 16:  Jupyter Cell</span></div>
</div>
<div class='float-figure'><div class='plain_layout' id='magicparlabel-439'><img style='width:30%;' src='e_6a60b2d6236c_ScatterMatrix.png' alt='image: e_6a60b2d6236c_ScatterMatrix.png' /></div>

<div class='plain_layout' id='magicparlabel-444'><span class='float-caption-Standard float-caption float-caption-standard'>Figure 1.4:  Scatter matrix</span></div>
</div>

</section>
<section>
<h4 class='subsubsection' id='magicparlabel-449'><span class="subsubsection_label">1.1.2</span> Strata</h4>
<div class='standard' id='magicparlabel-450'>Like we have done in our small project we need to split the dataset into train and test sets, but this time we do no want to do this randomly. Instead we want them to be split as evenly as possibly accross certain groups of samples that are called <b>stratas</b>. This makes sure that certain stratas are not over- or underrepresented. </div>

<div class='standard' id='magicparlabel-451'>E.g. if we want to predict the performance of a new drug, then we want to represent the ages of all patients as evenly as possible. Of course we would have to group different ages together, i.e. we could divide the ages into different bins for the ages 0-10, 10-20, 30-40, etc. </div>

<div class='standard' id='magicparlabel-452'>This method is called <b>stratified sampling</b>. In our case we have to make an educated guess to find good strata for predicting house prices. E.g. we could use the <b><span style='font-size:x-small;'>areaquality_product</span></b> and the <b><span style='font-size:x-small;'>bedrooms_ratio</span></b> as stratas. For this purpose we use the function <b><span style='font-size:x-small;'>pd.cut</span></b>, where the <b><span style='font-size:x-small;'>bins</span></b> define the boundaries of each strata. The stratas can also be named with the function argument <b><span style='font-size:x-small;'>labels</span></b>. It is noteworthy that argument <b><span style='font-size:x-small;'>include_lowest</span></b> prevents the case, where values at the edges of a bin are not included, i.e. transformed into <b><span style='font-size:x-small;'>NaN</span></b> (not any number). E.g. if the <b><span style='font-size:x-small;'>bedrooms_ratio</span></b> is 0 for a given sample, then <b><span style='font-size:x-small;'>pd.cut</span></b> would convert it into <b><span style='font-size:x-small;'>NaN</span></b>, because the <b><span style='font-size:x-small;'>bins</span></b> start 0. </div>
<div class='float-algorithm'><div class='plain_layout' id='magicparlabel-456'><math xmlns='http://www.w3.org/1998/Math/MathML'>
</math>
</div>
<div class='lyx_code'>
<div class="lyx_code_item" id='magicparlabel-461'><span style='font-size:x-small;'>#&#160;%%strata_cat_1&#160;=&#160;<b><span style='font-family:sans-serif;'>pd.cut</span></b><span style='font-family:monospace;'>(</span></span></div>
<div class="lyx_code_item" id='magicparlabel-462'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;housing["areaquality_product"],</span></div>
<div class="lyx_code_item" id='magicparlabel-463'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;bins&#160;=&#160;[0,&#160;5e3,&#160;8e3,&#160;12e3,&#160;np.inf],</span></div>
<div class="lyx_code_item" id='magicparlabel-464'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;labels&#160;=&#160;[1,2,3,4],</span></div>
<div class="lyx_code_item" id='magicparlabel-465'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;<b><span style='font-family:sans-serif;'>include_lowest</span></b><span style='font-family:monospace;'>&#160;=&#160;True</span></span></div>
<div class="lyx_code_item" id='magicparlabel-466'><span style='font-size:x-small;'>)</span></div>
<div class="lyx_code_item" id='magicparlabel-467'><span style='font-size:x-small;'>strata_cat_2&#160;=&#160;<b><span style='font-family:sans-serif;'>pd.cut</span></b><span style='font-family:monospace;'>(</span></span></div>
<div class="lyx_code_item" id='magicparlabel-468'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;housing["bedrooms_ratio"],</span></div>
<div class="lyx_code_item" id='magicparlabel-469'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;bins&#160;=&#160;[0.0,&#160;16e-4,&#160;21e-4,&#160;np.inf],</span></div>
<div class="lyx_code_item" id='magicparlabel-470'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;labels&#160;=&#160;[1,2,3],</span></div>
<div class="lyx_code_item" id='magicparlabel-471'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;<b><span style='font-family:sans-serif;'>include_lowest</span></b><span style='font-family:monospace;'>&#160;=&#160;True</span></span></div>
<div class="lyx_code_item" id='magicparlabel-472'><span style='font-size:x-small;'>)&#160;strata_cat_2&#160;(otherwise&#160;outcomment&#160;this&#160;line)</span></div>
<div class="lyx_code_item" id='magicparlabel-473'><span style='font-size:x-small;'>strata_cat_1.value_counts().sort_index().plot.bar(grid&#160;=&#160;True)</span></div>
<div class="lyx_code_item" id='magicparlabel-474'><span style='font-size:x-small;'>plt.show()</span></div>
<div class="lyx_code_item" id='magicparlabel-475'><span style='font-size:x-small;'>strata_cat_2.value_counts().sort_index().plot.bar(grid&#160;=&#160;True)</span></div>
<div class="lyx_code_item" id='magicparlabel-476'><span style='font-size:x-small;'>plt.show()</span></div>
</div>
<div class='plain_layout' id='magicparlabel-477'><span class='float-caption-Standard float-caption float-caption-standard'>Algorithm 17:  Jupyter Cell</span></div>
</div>


<div class='standard' id='magicparlabel-482'>The resulting plots show us the histograms for both strata features. If we want to make sure that <b><span style='font-size:x-small;'>pd.cut</span></b> did not create any <b><span style='font-size:x-small;'>NaN</span></b> values, we can check this with the following code. One problem we have not addressed, yet, is that we can split the housing dataset only with respect to one feature. If we wanted to combine two features, then we would have to use the following trick. Here we simply concatenate the strings of the labels of each strata feature, which serve as labels for the combined stata feature. The only problem is that some of the combined stratas have very view samples, which could lead to distortions in our prediction model or even to runtime errors.</div>
<div class='float-algorithm'><div class='plain_layout' id='magicparlabel-486'><math xmlns='http://www.w3.org/1998/Math/MathML'>
</math>
</div>
<div class='lyx_code'>
<div class="lyx_code_item" id='magicparlabel-491'><span style='font-size:x-small;'>#&#160;%%</span></div>
<div class="lyx_code_item" id='magicparlabel-492'><span style='font-size:x-small;'>has_nan&#160;=&#160;strata_cat_2.isna().any().any()</span></div>
<div class="lyx_code_item" id='magicparlabel-493'><span style='font-size:x-small;'>print("Does&#160;the&#160;DataFrame&#160;contain&#160;NaN&#160;values?",&#160;has_nan)</span></div>
</div>
<div class='plain_layout' id='magicparlabel-494'><span class='float-caption-Standard float-caption float-caption-standard'>Algorithm 18:  Test</span></div>
</div>
<div class='float-algorithm'><div class='plain_layout' id='magicparlabel-502'><math xmlns='http://www.w3.org/1998/Math/MathML'>
</math>
</div>
<div class='lyx_code'>
<div class="lyx_code_item" id='magicparlabel-507'><span style='font-size:x-small;'>#&#160;%%</span></div>
<div class="lyx_code_item" id='magicparlabel-508'><span style='font-size:x-small;'>sStrataCat&#160;=&#160;"Strata_Cat"</span></div>
<div class="lyx_code_item" id='magicparlabel-509'><span style='font-size:x-small;'>housing[sStrataCat]&#160;=&#160;strata_cat_1.astype(str)&#160;+&#160;"_"&#160;+&#160;strata_cat_2.astype(str)</span></div>
<div class="lyx_code_item" id='magicparlabel-510'><span style='font-size:x-small;'>housing[sStrataCat].value_counts().sort_index().plot.bar(grid&#160;=&#160;True)</span></div>
</div>
<div class='plain_layout' id='magicparlabel-511'><span class='float-caption-Standard float-caption float-caption-standard'>Algorithm 19:  Jupyter Cell</span></div>
</div>


<div class='standard' id='magicparlabel-516'>We can avoid this by simply putting all underrepresented strata in a new stratum with the label <b><span style='font-size:x-small;'>"Other"</span></b>. In the code below the integer <b><span style='font-size:x-small;'>iMinCounts</span></b> defines the minimum amount of samples each strata needs to have without being merged with the <b><span style='font-size:x-small;'>Other</span></b> stratum.Here <b><span style='font-size:x-small;'>.apply</span></b> returns a copy of the original series <b><span style='font-size:x-small;'>housing[sStrataCat] </span></b>, in which each value <b><span style='font-size:x-small;'>x</span></b> is replaced by the return value of the lamda function. The resulting histogram looks much better now, after the small strata have vanished. </div>
<div class='float-algorithm'><div class='plain_layout' id='magicparlabel-520'><math xmlns='http://www.w3.org/1998/Math/MathML'>
</math>
</div>
<div class='lyx_code'>
<div class="lyx_code_item" id='magicparlabel-525'><span style='font-size:x-small;'>#&#160;%%</span></div>
<div class="lyx_code_item" id='magicparlabel-526'><span style='font-size:x-small;'>iMinCounts&#160;=&#160;100</span></div>
<div class="lyx_code_item" id='magicparlabel-527'><span style='font-size:x-small;'>housing_stratacat_counts&#160;=&#160;housing[sStrataCat].value_counts()</span></div>
<div class="lyx_code_item" id='magicparlabel-528'><span style='font-size:x-small;'>indices_of_small_housing_stratacat_counts&#160;=&#160;housing_stratacat_counts[</span></div>
<div class="lyx_code_item" id='magicparlabel-529'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;housing_stratacat_counts&#160;&lt;&#160;iMinCounts</span></div>
<div class="lyx_code_item" id='magicparlabel-530'><span style='font-size:x-small;'>].index</span></div>
<div class="lyx_code_item" id='magicparlabel-531'><span style='font-size:x-small;'>housing[sStrataCat]&#160;=&#160;housing[sStrataCat].<b><span style='font-family:sans-serif;'>apply</span></b><span style='font-family:monospace;'>(</span></span></div>
<div class="lyx_code_item" id='magicparlabel-532'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;lambda&#160;x:&#160;&#8217;Other&#8217;&#160;if&#160;x&#160;in&#160;indices_of_small_housing_stratacat_counts&#160;else&#160;x</span></div>
<div class="lyx_code_item" id='magicparlabel-533'><span style='font-size:x-small;'>)</span></div>
<div class="lyx_code_item" id='magicparlabel-534'><span style='font-size:x-small;'>housing[sStrataCat].value_counts().sort_index().plot.bar(grid&#160;=&#160;True)</span></div>
<div class="lyx_code_item" id='magicparlabel-535'><span style='font-size:x-small;'>plt.show()</span></div>
</div>
<div class='plain_layout' id='magicparlabel-536'><span class='float-caption-Standard float-caption float-caption-standard'>Algorithm 20:  Jupyter Cell</span></div>
</div>


<div class='standard' id='magicparlabel-541'>Now we that we have obtained the desired strata, we can finally split the data with the <b><span style='font-size:x-small;'>stratify</span></b> argument. Since we will not need the strata category afterwards, we can revert the housing dataset back to its original form before applying the split. </div>
<div class='float-algorithm'><div class='plain_layout' id='magicparlabel-545'><math xmlns='http://www.w3.org/1998/Math/MathML'>
</math>
</div>
<div class='lyx_code'>
<div class="lyx_code_item" id='magicparlabel-550'><span style='font-size:x-small;'>#&#160;%%</span></div>
<div class="lyx_code_item" id='magicparlabel-551'><span style='font-size:x-small;'>from&#160;sklearn.model_selection&#160;import&#160;train_test_split</span></div>
<div class="lyx_code_item" id='magicparlabel-552'><span style='font-size:x-small;'>housing_strata_category&#160;=&#160;housing[sStrataCat].copy()</span></div>
<div class="lyx_code_item" id='magicparlabel-553'><span style='font-size:x-small;'>housing&#160;=&#160;housing_original</span></div>
<div class="lyx_code_item" id='magicparlabel-554'><span style='font-size:x-small;'>strat_train_set,&#160;strat_test_set&#160;=&#160;<b><span style='font-family:sans-serif;'>train_test_split</span></b><span style='font-family:monospace;'>(</span></span></div>
<div class="lyx_code_item" id='magicparlabel-555'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;housing,&#160;test_size&#160;=&#160;0.15,&#160;<b><span style='font-family:sans-serif;'>stratify</span></b><span style='font-family:monospace;'>&#160;=&#160;housing_strata_category,&#160;random_state&#160;=&#160;42</span></span></div>
<div class="lyx_code_item" id='magicparlabel-556'><span style='font-size:x-small;'>)</span></div>
<div class="lyx_code_item" id='magicparlabel-557'><span style='font-size:x-small;'>housing&#160;=&#160;strat_train_set.drop("SalePrice",&#160;axis=1)</span></div>
<div class="lyx_code_item" id='magicparlabel-558'><span style='font-size:x-small;'>housing_targets&#160;=&#160;strat_train_set["SalePrice"].copy()</span></div>
</div>
<div class='plain_layout' id='magicparlabel-559'><span class='float-caption-Standard float-caption float-caption-standard'>Algorithm 21:  Jupyter Cell</span></div>
</div>

</section>
<section>
<h4 class='subsubsection' id='magicparlabel-564'><span class="subsubsection_label">1.1.3</span> Pipelines</h4>
<div class='standard' id='magicparlabel-565'>Next we import the required pipeline modules that we will be using. The last imports will be useful for implementing our own transformers, and thus create custom hyperparameters. For this purpose it is helpful to define a list of the column features we want to transform, and an inverted version of this list in form of a dictionary. In this project our custom transformer <b><span style='font-size:x-small;'>ColumnFormulaTransformer</span></b> should have the following properties. </div>
<div class='float-algorithm'><div class='plain_layout' id='magicparlabel-569'><math xmlns='http://www.w3.org/1998/Math/MathML'>
</math>
</div>
<div class='lyx_code'>
<div class="lyx_code_item" id='magicparlabel-574'><span style='font-size:x-small;'>#&#160;%%</span></div>
<div class="lyx_code_item" id='magicparlabel-575'><span style='font-size:x-small;'>from&#160;sklearn.impute&#160;import&#160;SimpleImputer</span></div>
<div class="lyx_code_item" id='magicparlabel-576'><span style='font-size:x-small;'>from&#160;sklearn.preprocessing&#160;import&#160;StandardScaler</span></div>
<div class="lyx_code_item" id='magicparlabel-577'><span style='font-size:x-small;'>from&#160;sklearn.preprocessing&#160;import&#160;OneHotEncoder</span></div>
<div class="lyx_code_item" id='magicparlabel-578'><span style='font-size:x-small;'>from&#160;sklearn.pipeline&#160;import&#160;make_pipeline</span></div>
<div class="lyx_code_item" id='magicparlabel-579'><span style='font-size:x-small;'>from&#160;sklearn.compose&#160;import&#160;ColumnTransformer</span></div>
<div class="lyx_code_item" id='magicparlabel-580'><span style='font-size:x-small;'>from&#160;sklearn.compose&#160;import&#160;make_column_selector</span></div>
<div class="lyx_code_item" id='magicparlabel-581'><span style='font-size:x-small;'>from&#160;sklearn.preprocessing&#160;import&#160;FunctionTransformer</span></div>
<div class="lyx_code_item" id='magicparlabel-582'><span style='font-size:x-small;'>from&#160;sklearn.pipeline&#160;import&#160;Pipeline</span></div>
<div class="lyx_code_item" id='magicparlabel-583'><span style='font-size:x-small;'>from&#160;sklearn.base&#160;import&#160;BaseEstimator,&#160;TransformerMixin</span></div>
</div>
<div class='plain_layout' id='magicparlabel-584'><span class='float-caption-Standard float-caption float-caption-standard'>Algorithm 22:  Jupyter Cell</span></div>
</div>
<div class='float-algorithm'><div class='plain_layout' id='magicparlabel-592'><math xmlns='http://www.w3.org/1998/Math/MathML'>
</math>
</div>
<div class='lyx_code'>
<div class="lyx_code_item" id='magicparlabel-597'><span style='font-size:x-small;'>#&#160;%%</span></div>
<div class="lyx_code_item" id='magicparlabel-598'><b><span style='font-family:sans-serif;'><span style='font-size:x-small;'>list_trafo_columns</span></span></b><span style='font-family:sans-serif;'><span style='font-size:x-small;'><!-- Output Error: Tried to close pending tag `span' when other tags were pending. Last pending tag is `<span style='font-size:x-small;'>'. Tag discarded. -->
<span style='font-family:monospace;'>&#160;=&#160;[</span></span></span></div>
<div class="lyx_code_item" id='magicparlabel-599'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;"FullBath",&#160;"HalfBath",&#160;"BsmtFullBath",&#160;"BsmtHalfBath",</span></div>
<div class="lyx_code_item" id='magicparlabel-600'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;"GrLivArea",&#160;"OverallQual",</span></div>
<div class="lyx_code_item" id='magicparlabel-601'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;"Ranked_PavedDrive",&#160;"Ranked_GarageFinish",&#160;"Ranked_GarageQual",&#160;"GarageCars",&#160;"GarageArea",</span></div>
<div class="lyx_code_item" id='magicparlabel-602'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;"BedroomAbvGr",&#160;"GrLivArea",</span></div>
<div class="lyx_code_item" id='magicparlabel-603'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;"Ranked_HeatingQC",&#160;"GrLivArea",</span></div>
<div class="lyx_code_item" id='magicparlabel-604'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;"KitchenAbvGr",&#160;"BedroomAbvGr",&#160;"TotRmsAbvGrd",</span></div>
<div class="lyx_code_item" id='magicparlabel-605'><span style='font-size:x-small;'>]</span></div>
<div class="lyx_code_item" id='magicparlabel-606'><b><span style='font-family:sans-serif;'><span style='font-size:x-small;'>inverse_list_trafo_columns</span></span></b><span style='font-family:sans-serif;'><span style='font-size:x-small;'><!-- Output Error: Tried to close pending tag `span' when other tags were pending. Last pending tag is `<span style='font-size:x-small;'>'. Tag discarded. -->
<span style='font-family:monospace;'>&#160;=&#160;{</span></span></span></div>
<div class="lyx_code_item" id='magicparlabel-607'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;value:&#160;index&#160;for&#160;index,&#160;value&#160;in&#160;enumerate(list_trafo_columns)</span></div>
<div class="lyx_code_item" id='magicparlabel-608'><span style='font-size:x-small;'>}&#160;</span></div>
</div>
<div class='plain_layout' id='magicparlabel-609'><span class='float-caption-Standard float-caption float-caption-standard'>Algorithm 23:  Jupyter Cell</span></div>
</div>

<ul class='lyxitem lyxitemi'>
<li class="itemize_item" id='magicparlabel-614'>Ability to calculate ratios, where the numerator can be a sum or product of features. The denominator can be a column, where some values may be 0. In this case we need to be able to provide an alternative column for the denominator, where the values are guaranteed to be <math xmlns='http://www.w3.org/1998/Math/MathML'>
<mrow>
 <mo>&#x2260;</mo>
 <mn>0</mn>
</mrow>
</math>
.</li>
<li class="itemize_item" id='magicparlabel-615'>We want to make sure the the first terms or factors in the numerator are the most important ones, while the less important ones can be omitted depending on which value the hyperparameter <b><span style='font-size:x-small;'>iTermCutoff</span></b> has. The important part here is that we will see how to implement hyperparameters in custom transformers, even though we will also see that it may not always be a good idea to engineer too many hyperparameters. </li>
<li class="itemize_item" id='magicparlabel-616'>For best practice reasons the <b><span style='font-size:x-small;'>fit</span></b> and <b><span style='font-size:x-small;'>transform</span></b> methods should make sure that the number of features is consistent (see <b><span style='font-size:x-small;'>X.shape[1]</span></b> further below).</li>
<li class="itemize_item" id='magicparlabel-617'>The transformer should have a <b><span style='font-size:x-small;'>get_feature_names_out</span></b> method. As we will see this controls how the lables of new features are named. In our case it will simply concatenate the prefix <b><span style='font-size:x-small;'>"formula" </span></b>with <b><span style='font-size:x-small;'>"__"</span></b> and the corresponding transformer name.</li>
<li class="itemize_item" id='magicparlabel-618'>For compatibility reasons the <b><span style='font-size:x-small;'>fit</span></b> method should return <b><span style='font-size:x-small;'>self</span></b> and have an input argument called <b><span style='font-size:x-small;'>y</span></b>, even if we will not use it.</li>
<li class="itemize_item" id='magicparlabel-619'>The transformer class should be derived from the <b><span style='font-size:x-small;'>TransformerMixin</span></b> class, which will create the <b><span style='font-size:x-small;'>fit_transform</span></b> automatically. We will only have to implement <b><span style='font-size:x-small;'>fit</span></b> and <b><span style='font-size:x-small;'>transform</span></b> ourselves. </li>
<li class="itemize_item" id='magicparlabel-620'>It should be also derived from <b><span style='font-size:x-small;'>BaseEstimator</span></b>, if we want to use automatic hyperparameter tuning. The tuning process must have access to the arguments of the class initializer method <b><span style='font-size:x-small;'>__init__</span></b>. This is usually already the case as long as <b><span style='font-size:x-small;'>__init__</span></b><span style='font-size:x-small;'> </span>does not include special Python syntax like <b><span style='font-size:x-small;'>*args</span></b><span style='font-size:x-small;'> </span>and<span style='font-size:x-small;'> <b>**kwargs</b></span>. </li>
</ul>
<div class='standard' id='magicparlabel-621'>We can achieve this with the following implementation. It may appear a bit overwhelming at first, but the previous explanations should make it clear. Next we want to include this transformer in pipelines that first apply <b><span style='font-size:x-small;'>SimpleImputer</span></b>, then our custom transformer and finally <b><span style='font-size:x-small;'>StandardScaler</span></b>. Since we will need several of these pipelines (and since the internal parameters of those pipelines should not be mixed with each other), we want to implement a function that can create new instances of our desired pipeline design.Since we will be using column transformers as well, it is very convenient to arrange the required 3-tuples in <b><span style='font-size:x-small;'>ColumnTransformer_TupleList</span></b>. As you will see later, this list reflects our previous ideas for creating new features like e.g. the bedroom ratio. We also have to set up simple pipelines like e.g. log-transformations for heavy-tailed features. One important transformation that we have not discussed, yet, is <b><span style='font-size:x-small;'>OneHotEncoder</span></b>. It transforms categorical features to numbers, which can then be used by regressors. The important part is that it makes sure each categorical value gets its own feature. </div>
<div class='float-algorithm'><div class='plain_layout' id='magicparlabel-625'><math xmlns='http://www.w3.org/1998/Math/MathML'>
</math>
</div>
<div class='lyx_code'>
<div class="lyx_code_item" id='magicparlabel-630'><span style='font-size:x-small;'>#&#160;%%</span></div>
<div class="lyx_code_item" id='magicparlabel-631'><span style='font-size:x-small;'>class&#160;<b><span style='font-family:sans-serif;'>ColumnFormulaTransformer</span></b><span style='font-family:monospace;'>(BaseEstimator,&#160;TransformerMixin):</span></span></div>
<div class="lyx_code_item" id='magicparlabel-632'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;def&#160;<b><span style='font-family:sans-serif;'>__init__</span></b><span style='font-family:monospace;'>(self,</span></span></div>
<div class="lyx_code_item" id='magicparlabel-633'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;sum&#160;=&#160;[],&#160;product&#160;=&#160;[],&#160;denominator&#160;=&#160;[],&#160;altdenominator&#160;=&#160;[],</span></div>
<div class="lyx_code_item" id='magicparlabel-634'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;iTermCutoff&#160;=&#160;np.inf</span></div>
<div class="lyx_code_item" id='magicparlabel-635'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;):</span></div>
<div class="lyx_code_item" id='magicparlabel-636'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self.sum&#160;=&#160;sum</span></div>
<div class="lyx_code_item" id='magicparlabel-637'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self.product&#160;=&#160;product</span></div>
<div class="lyx_code_item" id='magicparlabel-638'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self.denominator&#160;=&#160;denominator</span></div>
<div class="lyx_code_item" id='magicparlabel-639'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self.altdenominator&#160;=&#160;altdenominator</span></div>
<div class="lyx_code_item" id='magicparlabel-640'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self.iTermCutoff&#160;=&#160;iTermCutoff</span></div>
<div class="lyx_code_item" id='magicparlabel-641'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;def&#160;<b><span style='font-family:sans-serif;'>fit</span></b><span style='font-family:monospace;'>(self,&#160;X,&#160;y=None):</span></span></div>
<div class="lyx_code_item" id='magicparlabel-642'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self.n_features_in_&#160;=&#160;X.shape[1]</span></div>
<div class="lyx_code_item" id='magicparlabel-643'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return&#160;self</span></div>
<div class="lyx_code_item" id='magicparlabel-644'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;def&#160;<b><span style='font-family:sans-serif;'>transform</span></b><span style='font-family:monospace;'>(self,&#160;X):</span></span></div>
<div class="lyx_code_item" id='magicparlabel-645'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;assert&#160;self.n_features_in_&#160;==&#160;X.shape[1]</span></div>
<div class="lyx_code_item" id='magicparlabel-646'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;#calculate&#160;nominator:</span></div>
<div class="lyx_code_item" id='magicparlabel-647'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;numerator&#160;=&#160;np.zeros(X.shape[0])</span></div>
<div class="lyx_code_item" id='magicparlabel-648'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;for&#160;id,&#160;col&#160;in&#160;enumerate(self.sum):</span></div>
<div class="lyx_code_item" id='magicparlabel-649'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if&#160;id&#160;&gt;=&#160;self.iTermCutoff:</span></div>
<div class="lyx_code_item" id='magicparlabel-650'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;break</span></div>
<div class="lyx_code_item" id='magicparlabel-651'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;numerator&#160;+=&#160;X[:,inverse_list_trafo_columns[col]]</span></div>
<div class="lyx_code_item" id='magicparlabel-652'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if&#160;self.product:</span></div>
<div class="lyx_code_item" id='magicparlabel-653'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;prodnumerator&#160;=&#160;np.ones(X.shape[0])</span></div>
<div class="lyx_code_item" id='magicparlabel-654'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;for&#160;id,&#160;col&#160;in&#160;enumerate(self.product):</span></div>
<div class="lyx_code_item" id='magicparlabel-655'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if&#160;id&#160;&gt;=&#160;self.iTermCutoff:</span></div>
<div class="lyx_code_item" id='magicparlabel-656'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;break</span></div>
<div class="lyx_code_item" id='magicparlabel-657'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;prodnumerator&#160;*=&#160;X[:,inverse_list_trafo_columns[col]]</span></div>
<div class="lyx_code_item" id='magicparlabel-658'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;numerator&#160;+=&#160;prodnumerator</span></div>
<div class="lyx_code_item" id='magicparlabel-659'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;#calculate&#160;denominator:</span></div>
<div class="lyx_code_item" id='magicparlabel-660'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if&#160;self.denominator:</span></div>
<div class="lyx_code_item" id='magicparlabel-661'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;denominator&#160;=&#160;X[:,&#160;inverse_list_trafo_columns[self.denominator[0]]]</span></div>
<div class="lyx_code_item" id='magicparlabel-662'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if&#160;self.altdenominator:</span></div>
<div class="lyx_code_item" id='magicparlabel-663'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;altdenominator&#160;=&#160;\</span></div>
<div class="lyx_code_item" id='magicparlabel-664'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;X[:,&#160;inverse_list_trafo_columns[self.altdenominator[0]]]</span></div>
<div class="lyx_code_item" id='magicparlabel-665'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;denominator[denominator&#160;==&#160;0]&#160;=&#160;altdenominator[denominator&#160;==&#160;0]</span></div>
<div class="lyx_code_item" id='magicparlabel-666'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;result&#160;=&#160;numerator&#160;/&#160;denominator</span></div>
<div class="lyx_code_item" id='magicparlabel-667'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;else:</span></div>
<div class="lyx_code_item" id='magicparlabel-668'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;result&#160;=&#160;numerator</span></div>
<div class="lyx_code_item" id='magicparlabel-669'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return&#160;result.reshape(-1,&#160;1)&#160;#convert&#160;result&#160;from&#160;1D&#160;to&#160;2D&#160;NumPy&#160;array</span></div>
<div class="lyx_code_item" id='magicparlabel-670'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;def&#160;<b><span style='font-family:sans-serif;'>get_feature_names_out</span></b><span style='font-family:monospace;'>(self,&#160;names=None):</span></span></div>
<div class="lyx_code_item" id='magicparlabel-671'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return&#160;["formula"]</span></div>
</div>
<div class='plain_layout' id='magicparlabel-672'><span class='float-caption-Standard float-caption float-caption-standard'>Algorithm 24:  Jupyter Cell</span></div>
</div>
<div class='float-algorithm'><div class='plain_layout' id='magicparlabel-680'><math xmlns='http://www.w3.org/1998/Math/MathML'>
</math>
</div>
<div class='lyx_code'>
<div class="lyx_code_item" id='magicparlabel-685'><span style='font-size:x-small;'>#&#160;%%</span></div>
<div class="lyx_code_item" id='magicparlabel-686'><span style='font-size:x-small;'>def&#160;make_pipeline_with_formula(</span></div>
<div class="lyx_code_item" id='magicparlabel-687'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;sum&#160;=&#160;[],&#160;product&#160;=&#160;[],&#160;</span></div>
<div class="lyx_code_item" id='magicparlabel-688'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;denominator&#160;=&#160;[],&#160;altdenominator&#160;=&#160;[],</span></div>
<div class="lyx_code_item" id='magicparlabel-689'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;iTermCutoff&#160;=&#160;np.inf</span></div>
<div class="lyx_code_item" id='magicparlabel-690'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;):</span></div>
<div class="lyx_code_item" id='magicparlabel-691'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;return&#160;Pipeline([</span></div>
<div class="lyx_code_item" id='magicparlabel-692'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;("imputer",&#160;<b><span style='font-family:sans-serif;'>SimpleImputer</span></b><span style='font-family:monospace;'>(strategy="median")),</span></span></div>
<div class="lyx_code_item" id='magicparlabel-693'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(</span></div>
<div class="lyx_code_item" id='magicparlabel-694'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;"colformula",</span></div>
<div class="lyx_code_item" id='magicparlabel-695'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<b><span style='font-family:sans-serif;'>ColumnFormulaTransformer</span></b><span style='font-family:monospace;'>(</span></span></div>
<div class="lyx_code_item" id='magicparlabel-696'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;sum&#160;=&#160;sum,&#160;product&#160;=&#160;product,&#160;</span></div>
<div class="lyx_code_item" id='magicparlabel-697'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;denominator&#160;=&#160;denominator,&#160;altdenominator&#160;=&#160;altdenominator,</span></div>
<div class="lyx_code_item" id='magicparlabel-698'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;iTermCutoff&#160;=&#160;iTermCutoff</span></div>
<div class="lyx_code_item" id='magicparlabel-699'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;)</span></div>
<div class="lyx_code_item" id='magicparlabel-700'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;),</span></div>
<div class="lyx_code_item" id='magicparlabel-701'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;("scaler",&#160;<b><span style='font-family:sans-serif;'>StandardScaler</span></b><span style='font-family:monospace;'>())</span></span></div>
<div class="lyx_code_item" id='magicparlabel-702'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;])</span></div>
</div>
<div class='plain_layout' id='magicparlabel-703'><span class='float-caption-Standard float-caption float-caption-standard'>Algorithm 25:  Jupyter Cell</span></div>
</div>
<div class='float-algorithm'><div class='plain_layout' id='magicparlabel-711'><math xmlns='http://www.w3.org/1998/Math/MathML'>
</math>
</div>
<div class='lyx_code'>
<div class="lyx_code_item" id='magicparlabel-716'><span style='font-size:x-small;'>#&#160;%%</span></div>
<div class="lyx_code_item" id='magicparlabel-717'><span style='font-size:x-small;'>bathsum_list&#160;=&#160;["FullBath",&#160;"HalfBath",&#160;"BsmtFullBath",&#160;"BsmtHalfBath"]</span></div>
<div class="lyx_code_item" id='magicparlabel-718'><b><span style='font-family:sans-serif;'><span style='font-size:x-small;'>ColumnTransformer_TupleList</span></span></b><span style='font-family:sans-serif;'><span style='font-size:x-small;'><!-- Output Error: Tried to close pending tag `span' when other tags were pending. Last pending tag is `<span style='font-size:x-small;'>'. Tag discarded. -->
<span style='font-family:monospace;'>&#160;=&#160;[</span></span></span></div>
<div class="lyx_code_item" id='magicparlabel-719'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;("bath",&#160;make_pipeline_with_formula(</span></div>
<div class="lyx_code_item" id='magicparlabel-720'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;sum&#160;=&#160;bathsum_list</span></div>
<div class="lyx_code_item" id='magicparlabel-721'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;),&#160;list_trafo_columns</span></div>
<div class="lyx_code_item" id='magicparlabel-722'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;),</span></div>
<div class="lyx_code_item" id='magicparlabel-723'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;("areaquality",&#160;make_pipeline_with_formula(</span></div>
<div class="lyx_code_item" id='magicparlabel-724'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;product&#160;=&#160;["GrLivArea",&#160;"OverallQual"]</span></div>
<div class="lyx_code_item" id='magicparlabel-725'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;),&#160;list_trafo_columns</span></div>
<div class="lyx_code_item" id='magicparlabel-726'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;),</span></div>
<div class="lyx_code_item" id='magicparlabel-727'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;("garage",&#160;make_pipeline_with_formula(</span></div>
<div class="lyx_code_item" id='magicparlabel-728'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;product&#160;=&#160;["GarageCars",&#160;"GarageArea",&#160;"Ranked_GarageFinish",</span></div>
<div class="lyx_code_item" id='magicparlabel-729'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;"Ranked_GarageQual",&#160;"Ranked_GarageCond",&#160;"Ranked_PavedDrive",</span></div>
<div class="lyx_code_item" id='magicparlabel-730'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;]</span></div>
<div class="lyx_code_item" id='magicparlabel-731'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;),&#160;list_trafo_columns</span></div>
<div class="lyx_code_item" id='magicparlabel-732'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;),</span></div>
<div class="lyx_code_item" id='magicparlabel-733'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;("bedroom",&#160;make_pipeline_with_formula(</span></div>
<div class="lyx_code_item" id='magicparlabel-734'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;product&#160;=&#160;["BedroomAbvGr"],&#160;denominator&#160;=&#160;["GrLivArea"]</span></div>
<div class="lyx_code_item" id='magicparlabel-735'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;),&#160;list_trafo_columns</span></div>
<div class="lyx_code_item" id='magicparlabel-736'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;),</span></div>
<div class="lyx_code_item" id='magicparlabel-737'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;("roomquality",&#160;make_pipeline_with_formula(</span></div>
<div class="lyx_code_item" id='magicparlabel-738'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;product&#160;=&#160;["Ranked_HeatingQC",&#160;"TotRmsAbvGrd"]</span></div>
<div class="lyx_code_item" id='magicparlabel-739'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;),&#160;list_trafo_columns</span></div>
<div class="lyx_code_item" id='magicparlabel-740'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;),</span></div>
<div class="lyx_code_item" id='magicparlabel-741'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;("bath_kitchen",&#160;make_pipeline_with_formula(</span></div>
<div class="lyx_code_item" id='magicparlabel-742'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;sum&#160;=&#160;bathsum_list,</span></div>
<div class="lyx_code_item" id='magicparlabel-743'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;denominator&#160;=&#160;["KitchenAbvGr"],</span></div>
<div class="lyx_code_item" id='magicparlabel-744'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;altdenominator&#160;=&#160;["TotRmsAbvGrd"]</span></div>
<div class="lyx_code_item" id='magicparlabel-745'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;),&#160;list_trafo_columns</span></div>
<div class="lyx_code_item" id='magicparlabel-746'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;),</span></div>
<div class="lyx_code_item" id='magicparlabel-747'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;("bath_bedroom",&#160;make_pipeline_with_formula(</span></div>
<div class="lyx_code_item" id='magicparlabel-748'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;sum&#160;=&#160;bathsum_list,</span></div>
<div class="lyx_code_item" id='magicparlabel-749'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;denominator&#160;=&#160;["BedroomAbvGr"],</span></div>
<div class="lyx_code_item" id='magicparlabel-750'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;altdenominator&#160;=&#160;["TotRmsAbvGrd"]</span></div>
<div class="lyx_code_item" id='magicparlabel-751'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;),&#160;list_trafo_columns</span></div>
<div class="lyx_code_item" id='magicparlabel-752'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;),</span></div>
<div class="lyx_code_item" id='magicparlabel-753'><span style='font-size:x-small;'>]</span></div>
</div>
<div class='plain_layout' id='magicparlabel-754'><span class='float-caption-Standard float-caption float-caption-standard'>Algorithm 26:  Jupyter Cell</span></div>
</div>


<div class='standard' id='magicparlabel-759'>One of the reason for this is that two categorical values belonging to the same numerical feature would have an order between them (e.g. 5 is greater than 3), even though there may be no sensible order between those categories at all. This would create artificial patterns in the training set. </div>
<div class='float-algorithm'><div class='plain_layout' id='magicparlabel-763'><math xmlns='http://www.w3.org/1998/Math/MathML'>
</math>
</div>
<div class='lyx_code'>
<div class="lyx_code_item" id='magicparlabel-768'><span style='font-size:x-small;'>#&#160;%%</span></div>
<div class="lyx_code_item" id='magicparlabel-769'><span style='font-size:x-small;'>def&#160;safe_log(x):</span></div>
<div class="lyx_code_item" id='magicparlabel-770'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;return&#160;np.log(np.where(x&#160;&lt;=&#160;0,&#160;1e-10,&#160;x))</span></div>
<div class="lyx_code_item" id='magicparlabel-771'><span style='font-size:x-small;'>log_pipeline&#160;=&#160;make_pipeline(</span></div>
<div class="lyx_code_item" id='magicparlabel-772'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;SimpleImputer(strategy&#160;=&#160;"median"),</span></div>
<div class="lyx_code_item" id='magicparlabel-773'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;FunctionTransformer(safe_log,&#160;feature_names_out&#160;=&#160;"one-to-one"),</span></div>
<div class="lyx_code_item" id='magicparlabel-774'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;StandardScaler()</span></div>
<div class="lyx_code_item" id='magicparlabel-775'><span style='font-size:x-small;'>)</span></div>
<div class="lyx_code_item" id='magicparlabel-776'><span style='font-size:x-small;'>cat_pipeline&#160;=&#160;make_pipeline(</span></div>
<div class="lyx_code_item" id='magicparlabel-777'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;SimpleImputer(strategy="most_frequent"),</span></div>
<div class="lyx_code_item" id='magicparlabel-778'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;<b><span style='font-family:sans-serif;'>OneHotEncoder</span></b><span style='font-family:monospace;'>(handle_unknown="ignore")</span></span></div>
<div class="lyx_code_item" id='magicparlabel-779'><span style='font-size:x-small;'>)</span></div>
<div class="lyx_code_item" id='magicparlabel-780'><span style='font-size:x-small;'>default_num_pipeline&#160;=&#160;make_pipeline(</span></div>
<div class="lyx_code_item" id='magicparlabel-781'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;SimpleImputer(strategy&#160;=&#160;"median"),</span></div>
<div class="lyx_code_item" id='magicparlabel-782'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;StandardScaler()</span></div>
<div class="lyx_code_item" id='magicparlabel-783'><span style='font-size:x-small;'>)</span></div>
<div class="lyx_code_item" id='magicparlabel-784'><b><span style='font-family:sans-serif;'><span style='font-size:x-small;'>ColumnTransformer_TupleList</span></span></b><span style='font-family:sans-serif;'><span style='font-size:x-small;'><!-- Output Error: Tried to close pending tag `span' when other tags were pending. Last pending tag is `<span style='font-size:x-small;'>'. Tag discarded. -->
<span style='font-family:monospace;'>.extend([</span></span></span></div>
<div class="lyx_code_item" id='magicparlabel-785'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;("log",&#160;log_pipeline,&#160;heavy_tailed_features),</span></div>
<div class="lyx_code_item" id='magicparlabel-786'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;("cat",&#160;cat_pipeline,&#160;make_column_selector(dtype_include&#160;=&#160;object)),</span></div>
<div class="lyx_code_item" id='magicparlabel-787'><span style='font-size:x-small;'>])</span></div>
<div class="lyx_code_item" id='magicparlabel-788'><span style='font-size:x-small;'>preprocessing&#160;=&#160;<b><span style='font-family:sans-serif;'>ColumnTransformer</span></b><span style='font-family:monospace;'>(</span></span></div>
<div class="lyx_code_item" id='magicparlabel-789'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;ColumnTransformer_TupleList,&#160;remainder&#160;=&#160;default_num_pipeline</span></div>
<div class="lyx_code_item" id='magicparlabel-790'><span style='font-size:x-small;'>)</span></div>
</div>
<div class='plain_layout' id='magicparlabel-791'><span class='float-caption-Standard float-caption float-caption-standard'>Algorithm 27:  Jupyter Cell</span></div>
</div>

</section>
<section>
<h4 class='subsubsection' id='magicparlabel-796'><span class="subsubsection_label">1.1.4</span> Prediction models</h4>
<div class='standard' id='magicparlabel-797'>Instead of a linear regressor we will be using a so called random forest regressor, although for now you do not have to understand how it works. The hyperparameter tuning can be done in different ways. We chose <b><span style='font-size:x-small;'>RandomizedSearchCV</span></b> for this purpose, because it allows us to tune many different configurations without trying out all of them. This means the results will be computed in a significantly shorter time.</div>
<div class='float-algorithm'><div class='plain_layout' id='magicparlabel-801'><math xmlns='http://www.w3.org/1998/Math/MathML'>
</math>
</div>
<div class='lyx_code'>
<div class="lyx_code_item" id='magicparlabel-806'><span style='font-size:x-small;'>#&#160;%%</span></div>
<div class="lyx_code_item" id='magicparlabel-807'><span style='font-size:x-small;'>from&#160;sklearn.ensemble&#160;import&#160;RandomForestRegressor</span></div>
<div class="lyx_code_item" id='magicparlabel-808'><span style='font-size:x-small;'>from&#160;scipy.stats&#160;import&#160;uniform,&#160;randint</span></div>
<div class="lyx_code_item" id='magicparlabel-809'><span style='font-size:x-small;'>full_pipeline&#160;=&#160;Pipeline([</span></div>
<div class="lyx_code_item" id='magicparlabel-810'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;("preprocessing",&#160;preprocessing),</span></div>
<div class="lyx_code_item" id='magicparlabel-811'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;("random_forest",&#160;<b><span style='font-family:sans-serif;'>RandomForestRegressor</span></b><span style='font-family:monospace;'>(random_state=42)),</span></span></div>
<div class="lyx_code_item" id='magicparlabel-812'><span style='font-size:x-small;'>])</span></div>
</div>
<div class='plain_layout' id='magicparlabel-813'><span class='float-caption-Standard float-caption float-caption-standard'>Algorithm 28:  Jupyter Cell</span></div>
</div>


<div class='standard' id='magicparlabel-818'>In the code below we can see how the transformer names and the function argument names are used to define which hyperparameters are changed in the end. Their names are separated by "<span style='font-size:x-small;'>__</span>". Of course the order of these names play a role, because they reflect the nested structures in which the hyperparameters can be found.Here the argument <b><span style='font-size:x-small;'>cv = 5</span></b> refers to the number of subdivisions of the training set required for a method called <b>cross validation</b>. The training set is subdivided in <math xmlns='http://www.w3.org/1998/Math/MathML'>
<mi>k</mi>
</math>
 many subsets. Then one of them is used as a test set, and the entirety of the remaining <math xmlns='http://www.w3.org/1998/Math/MathML'>
<mrow>
 <mi>k</mi>
 <mo stretchy='false'>-</mo>
 <mn>1</mn>
</mrow>
</math>
 subsets is used as train set. This allows us to estimate the overall performance of our prediction model. </div>
<div class='float-algorithm'><div class='plain_layout' id='magicparlabel-822'><math xmlns='http://www.w3.org/1998/Math/MathML'>
</math>
</div>
<div class='lyx_code'>
<div class="lyx_code_item" id='magicparlabel-827'><span style='font-size:x-small;'>#&#160;%%</span></div>
<div class="lyx_code_item" id='magicparlabel-828'><span style='font-size:x-small;'>from&#160;sklearn.model_selection&#160;import&#160;RandomizedSearchCV</span></div>
<div class="lyx_code_item" id='magicparlabel-829'><span style='font-size:x-small;'>param_distribs&#160;=&#160;{</span></div>
<div class="lyx_code_item" id='magicparlabel-830'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;&#8217;<b><span style='font-family:sans-serif;'>preprocessing__garage__colformula__iTermCutoff</span></b><span style='font-family:monospace;'>&#8217;:</span></span></div>
<div class="lyx_code_item" id='magicparlabel-831'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;RandomTermCuttof(2,6),</span></div>
<div class="lyx_code_item" id='magicparlabel-832'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;&#8217;<b><span style='font-family:sans-serif;'>preprocessing__bath__colformula__iTermCutoff</span></b><span style='font-family:monospace;'>&#8217;:</span></span></div>
<div class="lyx_code_item" id='magicparlabel-833'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;RandomTermCuttof(1,4),</span></div>
<div class="lyx_code_item" id='magicparlabel-834'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;&#8217;<b><span style='font-family:sans-serif;'>preprocessing__bath_kitchen__colformula__iTermCutoff</span></b><span style='font-family:monospace;'>&#8217;:</span></span></div>
<div class="lyx_code_item" id='magicparlabel-835'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;RandomTermCuttof(1,4),</span></div>
<div class="lyx_code_item" id='magicparlabel-836'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;&#8217;<b><span style='font-family:sans-serif;'>preprocessing__bath_bedroom__colformula__iTermCutoff</span></b><span style='font-family:monospace;'>&#8217;:</span></span></div>
<div class="lyx_code_item" id='magicparlabel-837'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;RandomTermCuttof(1,4),</span></div>
<div class="lyx_code_item" id='magicparlabel-838'><span style='font-size:x-small;'>}</span></div>
<div class="lyx_code_item" id='magicparlabel-839'><span style='font-size:x-small;'>rnd_search&#160;=&#160;<b><span style='font-family:sans-serif;'>RandomizedSearchCV</span></b><span style='font-family:monospace;'>(</span></span></div>
<div class="lyx_code_item" id='magicparlabel-840'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;full_pipeline,</span></div>
<div class="lyx_code_item" id='magicparlabel-841'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;param_distributions&#160;=&#160;param_distribs,</span></div>
<div class="lyx_code_item" id='magicparlabel-842'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;n_iter=30,</span></div>
<div class="lyx_code_item" id='magicparlabel-843'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;<b><span style='font-family:sans-serif;'>cv=5</span></b><span style='font-family:monospace;'>,&#160;</span></span></div>
<div class="lyx_code_item" id='magicparlabel-844'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;scoring=&#8217;neg_root_mean_squared_error&#8217;,</span></div>
<div class="lyx_code_item" id='magicparlabel-845'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;random_state=42,</span></div>
<div class="lyx_code_item" id='magicparlabel-846'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;<b><span style='font-family:sans-serif;'>return_train_score</span></b><span style='font-family:monospace;'>=True,&#160;&#160;#&#160;Critical&#160;for&#160;overfitting&#160;check</span></span></div>
<div class="lyx_code_item" id='magicparlabel-847'><span style='font-size:x-small;'>)</span></div>
<div class="lyx_code_item" id='magicparlabel-848'><span style='font-size:x-small;'>rnd_search.fit(housing,&#160;housing_targets)</span></div>
</div>
<div class='plain_layout' id='magicparlabel-849'><span class='float-caption-Standard float-caption float-caption-standard'>Algorithm 29:  Jupyter Cell</span></div>
</div>


<div class='standard' id='magicparlabel-854'>Furthermore, <b><span style='font-size:x-small;'>return_train_score</span></b> helps us to detect possible overfitting issues, because then we can also get the <b><span style='font-size:x-small;'>mean_train_score</span></b> instead of just the test scores: The output of this cell shows us that the mean train score is systematically much higher than the mean test score (with a difference of approximately 20,000), indicating that our current hyperparameter-tuned model has excessive freedom, leading to overfitting.</div>
<div class='float-algorithm'><div class='plain_layout' id='magicparlabel-858'><math xmlns='http://www.w3.org/1998/Math/MathML'>
</math>
</div>
<div class='lyx_code'>
<div class="lyx_code_item" id='magicparlabel-863'><span style='font-size:x-small;'>#&#160;%%</span></div>
<div class="lyx_code_item" id='magicparlabel-864'><span style='font-size:x-small;'>results&#160;=&#160;pd.DataFrame(rnd_search.cv_results_)</span></div>
<div class="lyx_code_item" id='magicparlabel-865'><span style='font-size:x-small;'>results[[&#8217;params&#8217;,&#160;&#8217;mean_train_score&#8217;,&#160;&#8217;mean_test_score&#8217;]]</span></div>
</div>
<div class='plain_layout' id='magicparlabel-866'><span class='float-caption-Standard float-caption float-caption-standard'>Algorithm 30:  Jupyter Cell</span></div>
</div>
<div class='float-algorithm'><div class='lyx_code'>
<div class="lyx_code_item" id='magicparlabel-874'><b><span style='font-family:sans-serif;'>id	params	mean_train_score	mean_test_score</span></b></div>
<div class="lyx_code_item" id='magicparlabel-875'><b><span style='font-family:sans-serif;'><span style='font-size:x-small;'>0</span></span></b><span style='font-family:sans-serif;'><span style='font-size:x-small;'><!-- Output Error: Tried to close pending tag `span' when other tags were pending. Last pending tag is `<span style='font-size:x-small;'>'. Tag discarded. -->
<span style='font-family:monospace;'>	{&#8217;preprocessing__bath_	-11654.712929	-29645.010378</span></span></span></div>
<div class="lyx_code_item" id='magicparlabel-876'><b><span style='font-family:sans-serif;'><span style='font-size:x-small;'>1</span></span></b><span style='font-family:sans-serif;'><span style='font-size:x-small;'><!-- Output Error: Tried to close pending tag `span' when other tags were pending. Last pending tag is `<span style='font-size:x-small;'>'. Tag discarded. -->
<span style='font-family:monospace;'>	{&#8217;preprocessing__bath__colformula__iTermCutoff...	-11736.464726	-30044.265372</span></span></span></div>
<div class="lyx_code_item" id='magicparlabel-877'><b><span style='font-family:sans-serif;'><span style='font-size:x-small;'>2</span></span></b><span style='font-family:sans-serif;'><span style='font-size:x-small;'><!-- Output Error: Tried to close pending tag `span' when other tags were pending. Last pending tag is `<span style='font-size:x-small;'>'. Tag discarded. -->
<span style='font-family:monospace;'>	{&#8217;preprocessing__bath__colformula__iTermCutoff...	-11586.796143	-29920.220671</span></span></span></div>
<div class="lyx_code_item" id='magicparlabel-878'><b><span style='font-family:sans-serif;'><span style='font-size:x-small;'>3</span></span></b><span style='font-family:sans-serif;'><span style='font-size:x-small;'><!-- Output Error: Tried to close pending tag `span' when other tags were pending. Last pending tag is `<span style='font-size:x-small;'>'. Tag discarded. -->
<span style='font-family:monospace;'>	{&#8217;preprocessing__bath__colformula__iTermCutoff...	-11638.117710	-29604.245397</span></span></span></div>
</div>
<div class='plain_layout' id='magicparlabel-879'><span class='float-caption-Standard float-caption float-caption-standard'>Algorithm 31:  Output (snippet)</span></div>
</div>


<div class='standard' id='magicparlabel-884'>We would have to go back and eliminate some of this freedoms. E.g. we could reduce the number of hyperparameters and see whether the performance of the prediction model changes as a result. For the scope of this guide we will not go deeper into this topic, but the key takeaway is that hyperparameters should be carefully engineered. </div>

<div class='standard' id='magicparlabel-885'>Note that we can also examine the <b><span style='font-size:x-small;'>mean_test_score</span></b> only, if we want to see further details. In any way we can now get the prediction model with the best hyperparameters our script has found so far. Our main train set (from the train test split) helps us to estimate the RMSE of its prediction. Another way to estimate values like the RMSE are <b>confidence intervals</b> that depend on the <b>confidence level</b>. E.g. if we obtain RMSE = 50,000 ¬± 3,000, then the confidence interval is spanning from 50,000 - 3,000 to 50,000 + 3,000. </div>
<div class='float-algorithm'><div class='plain_layout' id='magicparlabel-889'><math xmlns='http://www.w3.org/1998/Math/MathML'>
</math>
</div>
<div class='lyx_code'>
<div class="lyx_code_item" id='magicparlabel-894'><span style='font-size:x-small;'>#&#160;%%</span></div>
<div class="lyx_code_item" id='magicparlabel-895'><span style='font-size:x-small;'>cv_rmse_scores&#160;=&#160;-rnd_search.cv_results_[&#8217;mean_test_score&#8217;]</span></div>
<div class="lyx_code_item" id='magicparlabel-896'><span style='font-size:x-small;'>rmse_summary&#160;=&#160;pd.Series(cv_rmse_scores).describe()</span></div>
<div class="lyx_code_item" id='magicparlabel-897'><span style='font-size:x-small;'>rmse_summary</span></div>
</div>
<div class='plain_layout' id='magicparlabel-898'><span class='float-caption-Standard float-caption float-caption-standard'>Algorithm 32:  Jupyter Cell</span></div>
</div>
<div class='float-algorithm'><div class='plain_layout' id='magicparlabel-906'><math xmlns='http://www.w3.org/1998/Math/MathML'>
</math>
</div>
<div class='lyx_code'>
<div class="lyx_code_item" id='magicparlabel-911'><span style='font-size:x-small;'>#&#160;%%</span></div>
<div class="lyx_code_item" id='magicparlabel-912'><span style='font-size:x-small;'>from&#160;sklearn.metrics&#160;import&#160;root_mean_squared_error</span></div>
<div class="lyx_code_item" id='magicparlabel-913'><b><span style='font-family:sans-serif;'><span style='font-size:x-small;'>final_model</span></span></b><span style='font-family:sans-serif;'><span style='font-size:x-small;'><!-- Output Error: Tried to close pending tag `span' when other tags were pending. Last pending tag is `<span style='font-size:x-small;'>'. Tag discarded. -->
<span style='font-family:monospace;'>&#160;=&#160;rnd_search.</span><b><span style='font-family:sans-serif;'>best_estimator_</span></b></span></span></div>
<div class="lyx_code_item" id='magicparlabel-914'><span style='font-size:x-small;'>housing_predicted_prices&#160;=&#160;<b><span style='font-family:sans-serif;'>final_model</span></b><span style='font-family:monospace;'>.predict(housing_final_test)</span></span></div>
<div class="lyx_code_item" id='magicparlabel-915'><span style='font-size:x-small;'>tree_rmse&#160;=&#160;root_mean_squared_error(housing_targets_final_test,&#160;housing_predicted_prices)</span></div>
<div class="lyx_code_item" id='magicparlabel-916'><span style='font-size:x-small;'>tree_rmse</span></div>
</div>
<div class='plain_layout' id='magicparlabel-917'><span class='float-caption-Standard float-caption float-caption-standard'>Algorithm 33:  Jupyter Cell</span></div>
</div>


<div class='standard' id='magicparlabel-922'>A confidence level of 95% means that if we constructed these confidence intervals repeatedly in the same way, then 95% of them would contain the true RMSE.</div>

<div class='standard' id='magicparlabel-923'>The following code from [<a href='#LyXCite-Geron_Colab'><span class="bib-label">GeronColab</span></a>] gives us an array storing the upper and lower bound of such a confidence interval for the squared RMSE. Finally, we can use the prediction model to predict the targets (i.e. the sale prices) of the dataset, where the targets are unknown. In this case the predicted values are saved as a file called <b><span style='font-size:x-small;'>submission.csv</span></b>. This file can then be uploaded on Kaggle, where you can see your test results in form of the root mean squared error. </div>
<div class='float-algorithm'><div class='plain_layout' id='magicparlabel-927'><math xmlns='http://www.w3.org/1998/Math/MathML'>
</math>
</div>
<div class='lyx_code'>
<div class="lyx_code_item" id='magicparlabel-932'><span style='font-size:x-small;'>#&#160;%%</span></div>
<div class="lyx_code_item" id='magicparlabel-933'><span style='font-size:x-small;'>from&#160;scipy&#160;import&#160;stats</span></div>
<div class="lyx_code_item" id='magicparlabel-934'><b><span style='font-family:sans-serif;'><span style='font-size:x-small;'>confidence</span></span></b><span style='font-family:sans-serif;'><span style='font-size:x-small;'><!-- Output Error: Tried to close pending tag `span' when other tags were pending. Last pending tag is `<span style='font-size:x-small;'>'. Tag discarded. -->
<span style='font-family:monospace;'>&#160;=&#160;0.95</span></span></span></div>
<div class="lyx_code_item" id='magicparlabel-935'><span style='font-size:x-small;'>squared_errors&#160;=&#160;(housing_predicted_prices&#160;-&#160;np.array(housing_targets_final_test))&#160;**&#160;2</span></div>
<div class="lyx_code_item" id='magicparlabel-936'><span style='font-size:x-small;'>np.sqrt(stats.t.interval(</span></div>
<div class="lyx_code_item" id='magicparlabel-937'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<b><span style='font-family:sans-serif;'>confidence</span></b><span style='font-family:monospace;'>,&#160;len(squared_errors)&#160;-&#160;1,&#160;loc=squared_errors.mean(),</span></span></div>
<div class="lyx_code_item" id='magicparlabel-938'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;scale=stats.sem(squared_errors)</span></div>
<div class="lyx_code_item" id='magicparlabel-939'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;)</span></div>
<div class="lyx_code_item" id='magicparlabel-940'><span style='font-size:x-small;'>)</span></div>
</div>
<div class='plain_layout' id='magicparlabel-941'><span class='float-caption-Standard float-caption float-caption-standard'>Algorithm 34:  Jupyter Cell</span></div>
</div>
<div class='float-algorithm'><div class='plain_layout' id='magicparlabel-949'><math xmlns='http://www.w3.org/1998/Math/MathML'>
</math>
</div>
<div class='lyx_code'>
<div class="lyx_code_item" id='magicparlabel-954'><span style='font-size:x-small;'>#&#160;%%</span></div>
<div class="lyx_code_item" id='magicparlabel-955'><span style='font-size:x-small;'>housing_predicted_prices&#160;=&#160;rnd_search.predict(housing_unknown)</span></div>
<div class="lyx_code_item" id='magicparlabel-956'><span style='font-size:x-small;'>submission&#160;=&#160;pd.DataFrame({</span></div>
<div class="lyx_code_item" id='magicparlabel-957'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;&#8217;Id&#8217;:&#160;housing_unknown[&#8217;Id&#8217;],</span></div>
<div class="lyx_code_item" id='magicparlabel-958'><span style='font-size:x-small;'>&#160;&#160;&#160;&#160;&#8217;SalePrice&#8217;:&#160;housing_predicted_prices</span></div>
<div class="lyx_code_item" id='magicparlabel-959'><span style='font-size:x-small;'>})</span></div>
<div class="lyx_code_item" id='magicparlabel-960'><span style='font-size:x-small;'>submission.to_csv(sLocal_Folder_Path&#160;+&#160;&#8217;/submission.csv&#8217;,&#160;index=False)</span></div>
</div>
<div class='plain_layout' id='magicparlabel-961'><span class='float-caption-Standard float-caption float-caption-standard'>Algorithm 35:  Jupyter Cell</span></div>
</div>


<div class='standard' id='magicparlabel-966'>If this error is below 0.20, you have decent result for this competition. Below 0.15 is a solid result, and below 0.10 means you are really good. In our case we reach a score of about 0.14. </div>
<h2 class='bibliography'>References</h2>
<div class='bibliography'>
<div class='bibliography' id='magicparlabel-1004'><a id='LyXCite-Kaggle_Housing_Competition' /><span class='bibitemlabel'>Kaggle Housing</span><a href="https://www.kaggle.com/competitions/house-prices-advanced-regression-techniques/submissions">House Prices - Advanced Regression Techniques</a></div>

<div class='bibliography' id='magicparlabel-1005'><a id='LyXCite-Install_Anaconda' /><span class='bibitemlabel'>AnacondaInstall</span><a href="https://github.com/ageron/handson-ml3/blob/main/INSTALL.md">https://github.com/ageron/handson-ml3/blob/main/INSTALL.md</a></div>

<div class='bibliography' id='magicparlabel-1006'><a id='LyXCite-Geron_Colab' /><span class='bibitemlabel'>GeronColab</span><a href="https://colab.research.google.com/github/ageron/handson-ml3/blob/main/index.ipynb#scrollTo=-KAqK1NXk8Eu">https://colab.research.google.com/github/ageron/handson-ml3/blob/main/index.ipynb#scrollTo=-KAqK1NXk8Eu</a></div>

<div class='bibliography' id='magicparlabel-1007'><a id='LyXCite-KagglData_py' /><span class='bibitemlabel'>1</span><a href="https://github.com/ynaghibi/BlogsResources/blob/main/KagglDataC1.py">https://github.com/ynaghibi/BlogsResources/blob/main/KagglDataC1.py</a></div>

<div class='bibliography' id='magicparlabel-1008'><a id='LyXCite-HoML' /><span class='bibitemlabel'>HoML</span>Aur√©lien G√©ron (2019). <i>Hands-On Machine Learning with Scikit-Learn, Keras, and Tensorflow: Concepts, Tools, and Techniques to Build Intelligent Systems</i>. O&#8217;Reilly Media</div>

<div class='bibliography' id='magicparlabel-1009'><a id='LyXCite-VanderPlas' /><span class='bibitemlabel'>VanderPlas</span>Jake VanderPlas (2016). <i>Python Data Science Handbook</i> O&#8217;Reilly Media</div>

<div class='bibliography' id='magicparlabel-1010'><a id='LyXCite-Scrum' /><span class='bibitemlabel'>ScrumRef</span>Jeff Sutherland (2014). <i>Scrum: The Art of Doing Twice the Work in Half the Time</i>. Crown Currency</div>
</div></section>
</section>
</section>
</body>
</html>
